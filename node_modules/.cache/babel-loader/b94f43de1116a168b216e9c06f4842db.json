{"ast":null,"code":"// 纯函数\n\n/**\r\n * \r\n * @param {*} preState 之前的状态\r\n * @param {*} action 动作对象\r\n */\nconst initState = {\n  songList: [],\n  curIdx: 0,\n  song: null,\n  video: null,\n  user: {\n    loginState: false,\n    user: null,\n    detail: null,\n    playlist: []\n  }\n}; // preState == undefined 初始化\n\nexport default function searchReducer() {\n  let preState = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  console.log(preState, action);\n  const {\n    type,\n    data\n  } = action;\n\n  switch (type) {\n    case 'updateData':\n      return Object.assign({}, preState, {\n        [data.type]: data.data[data.type]\n      });\n\n    case 'addSong':\n      const {\n        songList,\n        curIdx\n      } = preState;\n      console.log('addSong', songList, data); // 这两句要分开写！！\n\n      let newSongList = Array.from(songList);\n      newSongList.splice(curIdx, 0, data);\n      console.log('#', newSongList);\n      return Object.assign({}, preState, {\n        songList: newSongList,\n        curIdx: curIdx + 1,\n        song: data\n      });\n\n    case 'watchMV':\n      return Object.assign({}, preState, {\n        video: data.video,\n        duration: data.duration\n      });\n\n    case 'login':\n      return Object.assign({}, preState, {\n        user: {\n          loginState: data.loginState,\n          user: data.user,\n          detail: null,\n          playlist: []\n        }\n      });\n\n    case 'loginState':\n      return Object.assign({}, preState, {\n        isLogin: data\n      });\n\n    case 'getSinger':\n      ;\n      break;\n\n    case 'getAlbums':\n      ;\n      break;\n\n    default:\n      return preState;\n  }\n}","map":{"version":3,"sources":["E:/js/react/music-app/React-musicApp/src/Redux/searchReducer.js"],"names":["initState","songList","curIdx","song","video","user","loginState","detail","playlist","searchReducer","preState","action","console","log","type","data","Object","assign","newSongList","Array","from","splice","duration","isLogin"],"mappings":"AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAMA,SAAS,GAAG;AAChBC,EAAAA,QAAQ,EAAE,EADM;AAEhBC,EAAAA,MAAM,EAAE,CAFQ;AAGhBC,EAAAA,IAAI,EAAC,IAHW;AAIhBC,EAAAA,KAAK,EAAC,IAJU;AAKhBC,EAAAA,IAAI,EAAC;AACHC,IAAAA,UAAU,EAAC,KADR;AAEHD,IAAAA,IAAI,EAAC,IAFF;AAGHE,IAAAA,MAAM,EAAC,IAHJ;AAIHC,IAAAA,QAAQ,EAAC;AAJN;AALW,CAAlB,C,CAYA;;AACA,eAAe,SAASC,aAAT,GAAqD;AAAA,MAA9BC,QAA8B,uEAAnBV,SAAmB;AAAA,MAARW,MAAQ;AAClEC,EAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ,EAAsBC,MAAtB;AACA,QAAM;AAAEG,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAiBJ,MAAvB;;AACA,UAAQG,IAAR;AACE,SAAK,YAAL;AACE,aAAOE,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBP,QAAlB,EACL;AACE,SAACK,IAAI,CAACD,IAAN,GAAaC,IAAI,CAACA,IAAL,CAAUA,IAAI,CAACD,IAAf;AADf,OADK,CAAP;;AAIF,SAAK,SAAL;AACE,YAAM;AAAEb,QAAAA,QAAF;AAAYC,QAAAA;AAAZ,UAAuBQ,QAA7B;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBZ,QAAvB,EAAkCc,IAAlC,EAFF,CAGE;;AACA,UAAIG,WAAW,GAAGC,KAAK,CAACC,IAAN,CAAWnB,QAAX,CAAlB;AACAiB,MAAAA,WAAW,CAACG,MAAZ,CAAmBnB,MAAnB,EAA2B,CAA3B,EAA8Ba,IAA9B;AAEAH,MAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ,EAAiBK,WAAjB;AACA,aAAOF,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBP,QAAlB,EACL;AACET,QAAAA,QAAQ,EAAEiB,WADZ;AAEEhB,QAAAA,MAAM,EAAEA,MAAM,GAAG,CAFnB;AAGEC,QAAAA,IAAI,EAACY;AAHP,OADK,CAAP;;AAMF,SAAK,SAAL;AAAe,aAAOC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAiBP,QAAjB,EAA0B;AAC9CN,QAAAA,KAAK,EAACW,IAAI,CAACX,KADmC;AAE9CkB,QAAAA,QAAQ,EAACP,IAAI,CAACO;AAFgC,OAA1B,CAAP;;AAIf,SAAK,OAAL;AAAc,aAAON,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBP,QAAlB,EAA4B;AAC/CL,QAAAA,IAAI,EAAC;AACHC,UAAAA,UAAU,EAACS,IAAI,CAACT,UADb;AAEHD,UAAAA,IAAI,EAACU,IAAI,CAACV,IAFP;AAGHE,UAAAA,MAAM,EAAC,IAHJ;AAIHC,UAAAA,QAAQ,EAAC;AAJN;AAD0C,OAA5B,CAAP;;AAQd,SAAK,YAAL;AAAkB,aAAOQ,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBP,QAAlB,EAA4B;AACnDa,QAAAA,OAAO,EAACR;AAD2C,OAA5B,CAAP;;AAGlB,SAAK,WAAL;AAAkB;AAAE;;AACpB,SAAK,WAAL;AAAkB;AAAE;;AACpB;AACE,aAAOL,QAAP;AAtCJ;AAwCD","sourcesContent":["// 纯函数\r\n\r\n/**\r\n * \r\n * @param {*} preState 之前的状态\r\n * @param {*} action 动作对象\r\n */\r\nconst initState = {\r\n  songList: [],\r\n  curIdx: 0,\r\n  song:null,\r\n  video:null,\r\n  user:{\r\n    loginState:false,\r\n    user:null,\r\n    detail:null,\r\n    playlist:[]\r\n  }\r\n};\r\n// preState == undefined 初始化\r\nexport default function searchReducer(preState = initState, action) {\r\n  console.log(preState, action)\r\n  const { type, data } = action;\r\n  switch (type) {\r\n    case 'updateData':\r\n      return Object.assign({}, preState,\r\n        {\r\n          [data.type]: data.data[data.type],\r\n        })\r\n    case 'addSong':\r\n      const { songList, curIdx } = preState;\r\n      console.log('addSong', songList , data);\r\n      // 这两句要分开写！！\r\n      let newSongList = Array.from(songList)\r\n      newSongList.splice(curIdx, 0, data);\r\n\r\n      console.log('#', newSongList)\r\n      return Object.assign({}, preState,\r\n        {\r\n          songList: newSongList,\r\n          curIdx: curIdx + 1,\r\n          song:data,\r\n        });\r\n    case 'watchMV':return Object.assign({},preState,{\r\n      video:data.video,\r\n      duration:data.duration\r\n    });\r\n    case 'login': return Object.assign({}, preState, {\r\n      user:{\r\n        loginState:data.loginState,\r\n        user:data.user,\r\n        detail:null,\r\n        playlist:[]\r\n      }\r\n    });\r\n    case 'loginState':return Object.assign({}, preState, {\r\n      isLogin:data,\r\n    })\r\n    case 'getSinger': ; break;\r\n    case 'getAlbums': ; break;\r\n    default:\r\n      return preState;\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}