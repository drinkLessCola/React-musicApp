{"ast":null,"code":"var _jsxFileName = \"E:\\\\js\\\\react\\\\music-app\\\\React-musicApp\\\\src\\\\Component\\\\SideBar\\\\SongListBlock\\\\index.jsx\";\nimport React, { Component } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport LikedIcon from '../../../Icons/LikedIcon';\nimport UnlikedIcon from '../../../Icons/UnlikedIcon';\nimport ListIcon from '../../../Icons/ListIcon';\nimport { connect } from 'react-redux';\nimport { getPlayListAction } from '../../../Redux/searchActions';\nimport MenuContext from '../../../Context/MenuContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TYPE = [\" \", \"创建的歌单\", \"收藏的歌单\"];\n\nfunction SongListBlock(props) {\n  console.log('-------SIDEBAR -> SONGLISTBLOCK render---------');\n\n  function changePage(e) {\n    console.log(\"changePage\", e);\n    const target = e.target.closest('li');\n    console.log(target.dataset.id);\n    props.getPlayListAction(target.dataset.id);\n  }\n\n  function handleContextMenu(e) {\n    const target = e.target.closest('li');\n    console.log(target);\n    const id = target.dataset.id;\n  } // userId\n  // updateTime\n  // playCount\n  // creator\n  // coverImgUrl\n  // anonimous\n\n\n  const {\n    playlist,\n    uid = null,\n    type\n  } = props;\n  console.log(\"playlist\", playlist);\n  console.log(\"uid\", uid);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"SideBar-unit\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"title\",\n      children: TYPE[type]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MenuContext.Consumer, {\n      children: toggleMenu => /*#__PURE__*/_jsxDEV(\"ul\", {\n        onClick: changePage,\n        onContextMenu: handleContextMenu.bind(null, toggleMenu),\n        children: playlist.map((l, idx) => {\n          return /*#__PURE__*/_jsxDEV(NavLink, {\n            to: `/songlist/${l.id}`,\n            children: /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"list-item\",\n              \"data-id\": l.id,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"icon\",\n                children: l.specialType == 5 ? /*#__PURE__*/_jsxDEV(UnlikedIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 48,\n                  columnNumber: 65\n                }, this) : /*#__PURE__*/_jsxDEV(ListIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 48,\n                  columnNumber: 83\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: l.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 19\n              }, this)]\n            }, idx, true, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n\n_c = SongListBlock;\nexport default connect(state => ({}), {\n  getPlayListAction: getPlayListAction\n})(SongListBlock);\n\nvar _c;\n\n$RefreshReg$(_c, \"SongListBlock\");","map":{"version":3,"sources":["E:/js/react/music-app/React-musicApp/src/Component/SideBar/SongListBlock/index.jsx"],"names":["React","Component","NavLink","LikedIcon","UnlikedIcon","ListIcon","connect","getPlayListAction","MenuContext","TYPE","SongListBlock","props","console","log","changePage","e","target","closest","dataset","id","handleContextMenu","playlist","uid","type","toggleMenu","bind","map","l","idx","specialType","name","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,kBAAxB;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,OAAOC,WAAP,MAAwB,4BAAxB;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,iBAAT,QAAkC,8BAAlC;AACA,OAAOC,WAAP,MAAwB,8BAAxB;;AACA,MAAMC,IAAI,GAAG,CACX,GADW,EAEX,OAFW,EAGX,OAHW,CAAb;;AAKA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC5BC,EAAAA,OAAO,CAACC,GAAR,CAAY,iDAAZ;;AACA,WAASC,UAAT,CAAoBC,CAApB,EAAuB;AACrBH,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BE,CAA1B;AACA,UAAMC,MAAM,GAAGD,CAAC,CAACC,MAAF,CAASC,OAAT,CAAiB,IAAjB,CAAf;AACAL,IAAAA,OAAO,CAACC,GAAR,CAAYG,MAAM,CAACE,OAAP,CAAeC,EAA3B;AACAR,IAAAA,KAAK,CAACJ,iBAAN,CAAwBS,MAAM,CAACE,OAAP,CAAeC,EAAvC;AACD;;AACD,WAASC,iBAAT,CAA2BL,CAA3B,EAA6B;AAC3B,UAAMC,MAAM,GAAGD,CAAC,CAACC,MAAF,CAASC,OAAT,CAAiB,IAAjB,CAAf;AACAL,IAAAA,OAAO,CAACC,GAAR,CAAYG,MAAZ;AACA,UAAMG,EAAE,GAAGH,MAAM,CAACE,OAAP,CAAeC,EAA1B;AAED,GAb2B,CAe5B;AACA;AACA;AACA;AACA;AACA;;;AACA,QAAM;AAAEE,IAAAA,QAAF;AAAYC,IAAAA,GAAG,GAAG,IAAlB;AAAwBC,IAAAA;AAAxB,MAAiCZ,KAAvC;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBQ,QAAxB;AACAT,EAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBS,GAAnB;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,gBAAwBb,IAAI,CAACc,IAAD;AAA5B;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,WAAD,CAAa,QAAb;AAAA,gBACIC,UAAD,iBACC;AAAI,QAAA,OAAO,EAAEV,UAAb;AAAyB,QAAA,aAAa,EAAEM,iBAAiB,CAACK,IAAlB,CAAuB,IAAvB,EAA4BD,UAA5B,CAAxC;AAAA,kBACCH,QAAQ,CAACK,GAAT,CAAa,CAACC,CAAD,EAAIC,GAAJ,KAAY;AACxB,8BACE,QAAC,OAAD;AAAS,YAAA,EAAE,EAAG,aAAYD,CAAC,CAACR,EAAG,EAA/B;AAAA,mCACE;AAAI,cAAA,SAAS,EAAC,WAAd;AAAoC,yBAASQ,CAAC,CAACR,EAA/C;AAAA,sCACE;AAAK,gBAAA,SAAS,EAAC,MAAf;AAAA,0BAAwBQ,CAAC,CAACE,WAAF,IAAiB,CAAlB,gBAAuB,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,wBAAvB,gBAAyC,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAhE;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE;AAAA,0BAAOF,CAAC,CAACG;AAAT;AAAA;AAAA;AAAA;AAAA,sBAFF;AAAA,eAA+BF,GAA/B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF;AAQD,SATA;AADD;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAuBD;;KA/CQlB,a;AAiDT,eAAeJ,OAAO,CACpByB,KAAK,KAAK,EAAL,CADe,EAEpB;AACExB,EAAAA,iBAAiB,EAAEA;AADrB,CAFoB,CAAP,CAKbG,aALa,CAAf","sourcesContent":["import React, { Component } from 'react'\r\nimport { NavLink } from 'react-router-dom';\r\nimport LikedIcon from '../../../Icons/LikedIcon';\r\nimport UnlikedIcon from '../../../Icons/UnlikedIcon';\r\nimport ListIcon from '../../../Icons/ListIcon';\r\nimport { connect } from 'react-redux';\r\nimport { getPlayListAction } from '../../../Redux/searchActions'\r\nimport MenuContext from '../../../Context/MenuContext';\r\nconst TYPE = [\r\n  \" \",\r\n  \"创建的歌单\",\r\n  \"收藏的歌单\"\r\n]\r\nfunction SongListBlock(props) {\r\n  console.log('-------SIDEBAR -> SONGLISTBLOCK render---------')\r\n  function changePage(e) {\r\n    console.log(\"changePage\", e)\r\n    const target = e.target.closest('li');\r\n    console.log(target.dataset.id)\r\n    props.getPlayListAction(target.dataset.id);\r\n  }\r\n  function handleContextMenu(e){\r\n    const target = e.target.closest('li')\r\n    console.log(target)\r\n    const id = target.dataset.id\r\n\r\n  }\r\n\r\n  // userId\r\n  // updateTime\r\n  // playCount\r\n  // creator\r\n  // coverImgUrl\r\n  // anonimous\r\n  const { playlist, uid = null, type } = props;\r\n  console.log(\"playlist\", playlist)\r\n  console.log(\"uid\", uid)\r\n  return (\r\n    <div className=\"SideBar-unit\">\r\n      <div className=\"title\">{TYPE[type]}</div>\r\n      <MenuContext.Consumer>\r\n        {(toggleMenu) => (\r\n          <ul onClick={changePage} onContextMenu={handleContextMenu.bind(null,toggleMenu)}>\r\n          {playlist.map((l, idx) => {\r\n            return (\r\n              <NavLink to={`/songlist/${l.id}`}>\r\n                <li className=\"list-item\" key={idx} data-id={l.id}>\r\n                  <div className='icon'>{(l.specialType == 5) ? <UnlikedIcon /> : <ListIcon />}</div>\r\n                  <span>{l.name}</span>\r\n                </li>\r\n              </NavLink>\r\n            )\r\n          }\r\n          )}\r\n        </ul>\r\n        )}\r\n      \r\n      </MenuContext.Consumer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default connect(\r\n  state => ({}),\r\n  {\r\n    getPlayListAction: getPlayListAction,\r\n  }\r\n)(SongListBlock)\r\n\r\n"]},"metadata":{},"sourceType":"module"}