{"ast":null,"code":"var _jsxFileName = \"E:\\\\js\\\\react\\\\music-app\\\\React-musicApp\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport SideBar from './Component/SideBar';\nimport Bottom from './Component/Bottom';\nimport Header from './Component/Header';\nimport Main from './Component/Main';\nimport Login from './Component/Login';\nimport PlayerPage from './Component/PlayerPage';\nimport './App.css';\nimport { connect } from 'react-redux';\nimport { getLoginStateAction } from './Redux/searchActions';\nimport ThemeContext from './Context/ThemeContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App(props) {\n  _s();\n\n  console.log('--------APP render---------');\n  const [state, setState] = React.useState({\n    isPlayListShowing: false,\n    // 显示播放列表\n    songListCurIdx: 1,\n    // 播放到了歌单的哪一首\n    mode: 0,\n    // 播放模式，0：列表循环 1：单曲循环 2：随机循环 3：顺序循环\n    songSrc: '',\n    loginState: null,\n    showLogin: false\n  });\n  useEffect(() => {\n    const res = (async () => {\n      return await props.getLoginState();\n    })();\n\n    console.log('res', res);\n  }, []);\n  const [theme, setTheme] = React.useState('light');\n  /**\n   * 修改主题模式\n   */\n\n  const toggleTheme = () => {\n    console.log('【toggleTheme】');\n    console.log('【theme】', theme);\n    const isDark = theme == 'dark';\n    console.log(isDark);\n    const bgColor = isDark ? '#fff' : '#202020';\n    const btnColor = isDark ? 'rgb(255, 202, 89)' : 'blueviolet';\n    document.documentElement.style.setProperty('--theme-bg-color', bgColor);\n    document.documentElement.style.setProperty('--btn-color', btnColor);\n    console.log(bgColor, btnColor);\n    reverseTheme(isDark);\n    setTheme(isDark ? 'light' : 'dark');\n  };\n\n  const user = localStorage.getItem('user');\n  console.log(user);\n\n  function showPlayList() {\n    const {\n      isPlayListShowing\n    } = state;\n    setState({\n      isPlayListShowing: !isPlayListShowing\n    });\n  }\n\n  function showLogin() {\n    setState({\n      showLogin: true\n    });\n  }\n\n  function changeMode(event) {\n    const {\n      mode\n    } = state;\n    setState({\n      mode: (mode + 1) % 4\n    });\n    event.preventDefault();\n    event.stopPropagation();\n  }\n\n  function handleClick(event) {\n    const target = event.target.closest('.PlayListBoard');\n    if (target || !state.isPlayListShowing) return;\n    setState({\n      isPlayListShowing: false\n    });\n  }\n\n  console.log(state.showLogin); // React.useState\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    onClick: handleClick,\n    children: [/*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n      value: {\n        changeTheme: toggleTheme\n      },\n      children: React.useMemo(() => /*#__PURE__*/_jsxDEV(Header, {\n        showLogin: showLogin\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 30\n      }, this), [props.loginState])\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main\",\n      children: [React.useMemo(() => /*#__PURE__*/_jsxDEV(SideBar, {\n        list: props.playlist\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 30\n      }, this), [props.playList]), /*#__PURE__*/_jsxDEV(Main, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), React.useMemo(() => /*#__PURE__*/_jsxDEV(Bottom, {\n      showPlayList: showPlayList,\n      changeMode: changeMode,\n      mode: state.mode,\n      songSrc: state.songSrc\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 28\n    }, this), []), /*#__PURE__*/_jsxDEV(PlayerPage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), state.showLogin && /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 27\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n} // 花括号外层要包裹小括号\n\n\n_s(App, \"cgo2ddjIWoUlbRc9jeA4sVsgFn4=\");\n\n_c = App;\nexport default connect(state => ({\n  loginState: state.loginState,\n  detail: state.detail,\n  playlist: state.playlist\n}), {\n  getLoginState: getLoginStateAction\n})(App);\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["E:/js/react/music-app/React-musicApp/src/App.js"],"names":["React","useEffect","SideBar","Bottom","Header","Main","Login","PlayerPage","connect","getLoginStateAction","ThemeContext","App","props","console","log","state","setState","useState","isPlayListShowing","songListCurIdx","mode","songSrc","loginState","showLogin","res","getLoginState","theme","setTheme","toggleTheme","isDark","bgColor","btnColor","document","documentElement","style","setProperty","reverseTheme","user","localStorage","getItem","showPlayList","changeMode","event","preventDefault","stopPropagation","handleClick","target","closest","changeTheme","useMemo","playlist","playList","detail"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react'\nimport SideBar from './Component/SideBar';\nimport Bottom from './Component/Bottom';\nimport Header from './Component/Header';\nimport Main from './Component/Main';\nimport Login from './Component/Login';\nimport PlayerPage from './Component/PlayerPage'\n\nimport './App.css'\nimport { connect } from 'react-redux';\nimport { getLoginStateAction } from './Redux/searchActions';\n\nimport ThemeContext from './Context/ThemeContext';\n\nfunction App(props) {\n  console.log('--------APP render---------')\n  const [state, setState] = React.useState({\n    isPlayListShowing: false,  // 显示播放列表\n    songListCurIdx: 1,         // 播放到了歌单的哪一首\n    mode: 0,                   // 播放模式，0：列表循环 1：单曲循环 2：随机循环 3：顺序循环\n    songSrc: '',\n    loginState: null,\n    showLogin:false,\n  });\n\n  useEffect(() => {\n    const res = (async() => {\n      return await props.getLoginState();\n    })();\n    console.log('res', res)\n  },[]);\n  const [theme, setTheme] = React.useState('light')\n  \n  /**\n   * 修改主题模式\n   */\n  const toggleTheme = () => {\n    console.log('【toggleTheme】')\n    console.log('【theme】', theme)\n    const isDark = (theme == 'dark');\n    console.log(isDark)\n    const bgColor = (isDark? '#fff' : '#202020');\n    const btnColor = (isDark? 'rgb(255, 202, 89)' : 'blueviolet');\n    document.documentElement.style.setProperty('--theme-bg-color', bgColor)\n    document.documentElement.style.setProperty('--btn-color', btnColor)\n    console.log(bgColor, btnColor)\n    reverseTheme(isDark);\n    setTheme(isDark?'light':'dark');\n  }\n\n  const user = localStorage.getItem('user');\n  console.log(user);\n\n  function showPlayList() {\n    const { isPlayListShowing } = state;\n    setState({\n      isPlayListShowing: !isPlayListShowing,\n    });\n  }\n  function showLogin(){\n    setState({showLogin:true});\n  }\n  function changeMode(event) {\n\n    const { mode } = state;\n    setState({\n      mode: (mode + 1) % 4,\n    })\n    event.preventDefault();\n    event.stopPropagation();\n  }\n  function handleClick(event){\n    const target = event.target.closest('.PlayListBoard');\n    if (target || !state.isPlayListShowing) return;\n    setState({\n      isPlayListShowing: false,\n    });\n  }\n  console.log(state.showLogin)\n  // React.useState\n  return (\n    <div className=\"App\" onClick={handleClick}>\n      <ThemeContext.Provider value={{changeTheme:toggleTheme}}>\n        {React.useMemo(() => <Header showLogin={showLogin}/>,[props.loginState])}\n      </ThemeContext.Provider>\n      <div className=\"main\">\n        {React.useMemo(() => <SideBar list={props.playlist} /> ,[props.playList])}\n        <Main>\n        </Main>\n      </div>\n      {React.useMemo(() => <Bottom\n        showPlayList={showPlayList}\n        changeMode={changeMode}\n        mode={state.mode}\n        songSrc={state.songSrc}\n      />, [])}\n      <PlayerPage />\n      {state.showLogin && <Login></Login>}\n    </div>\n  );\n\n}\n\n\n\n\n// 花括号外层要包裹小括号\nexport default connect(\n  state => ({\n    loginState:state.loginState,\n    detail:state.detail,\n    playlist:state.playlist,\n  }),\n  {\n    getLoginState:getLoginStateAction\n  }\n)(App)"]},"metadata":{},"sourceType":"module"}