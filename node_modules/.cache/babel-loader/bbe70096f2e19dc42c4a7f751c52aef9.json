{"ast":null,"code":"var _jsxFileName = \"E:\\\\js\\\\react\\\\music-app\\\\React-musicApp\\\\src\\\\Component\\\\PlayerPage\\\\index.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { getLyricAction } from '../../Redux/songActions';\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PlayerPage(props) {\n  const {\n    playerPageOpen = false,\n    song,\n    curTime\n  } = props;\n  console.log(\"playerPageOpen\", playerPageOpen);\n  let flag = true;\n  return (\n    /*#__PURE__*/\n    // playerPageOpen &&\n    _jsxDEV(\"div\", {\n      className: \"PlayerPage\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"\\u2228\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"player-cover\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player-cover-img\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: song === null || song === void 0 ? void 0 : song.al.picUrl\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"shadow-effect\",\n          src: song === null || song === void 0 ? void 0 : song.al.picUrl\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"player-right\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"player-song-name\",\n          children: song === null || song === void 0 ? void 0 : song.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player-lyric\",\n          children: props.lyric.split('\\n').map((l, idx) => {\n            let [time, text] = l.split(']');\n            time = time.slice(1);\n            let [timeTemp] = time.split('.');\n            let className = '';\n\n            if (flag && time > curTime) {\n              className = 'lyric-active';\n              flag = false;\n            }\n\n            return /*#__PURE__*/_jsxDEV(\"p\", {\n              \"data-time\": time,\n              className: className,\n              children: text\n            }, idx, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 20\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }, this)\n  );\n}\n\n_c = PlayerPage;\nexport default connect(state => ({\n  playerPageOpen: state.playerPageOpen,\n  lyric: state.lyric,\n  song: state.song,\n  curTime: state.curTime\n}), {\n  getLyric: getLyricAction\n})(PlayerPage);\n\nvar _c;\n\n$RefreshReg$(_c, \"PlayerPage\");","map":{"version":3,"sources":["E:/js/react/music-app/React-musicApp/src/Component/PlayerPage/index.jsx"],"names":["React","connect","getLyricAction","PlayerPage","props","playerPageOpen","song","curTime","console","log","flag","al","picUrl","name","lyric","split","map","l","idx","time","text","slice","timeTemp","className","state","getLyric"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,cAAT,QAA+B,yBAA/B;AACA,OAAO,aAAP;;;AAEA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AACzB,QAAM;AAAEC,IAAAA,cAAc,GAAG,KAAnB;AAA0BC,IAAAA,IAA1B;AAAgCC,IAAAA;AAAhC,MAA4CH,KAAlD;AACAI,EAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BJ,cAA9B;AACA,MAAIK,IAAI,GAAG,IAAX;AACA;AAAA;AACE;AACA;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,8BAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,kBAAf;AAAA,iCACE;AAAK,YAAA,GAAG,EAAEJ,IAAF,aAAEA,IAAF,uBAAEA,IAAI,CAAEK,EAAN,CAASC;AAAnB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE;AAAK,UAAA,SAAS,EAAC,eAAf;AAA+B,UAAA,GAAG,EAAEN,IAAF,aAAEA,IAAF,uBAAEA,IAAI,CAAEK,EAAN,CAASC;AAA7C;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,eAWE;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,gCACE;AAAI,UAAA,SAAS,EAAC,kBAAd;AAAA,oBAAkCN,IAAlC,aAAkCA,IAAlC,uBAAkCA,IAAI,CAAEO;AAAxC;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAK,UAAA,SAAS,EAAC,cAAf;AAAA,oBACGT,KAAK,CAACU,KAAN,CAAYC,KAAZ,CAAkB,IAAlB,EAAwBC,GAAxB,CAA4B,CAACC,CAAD,EAAIC,GAAJ,KAAY;AACvC,gBAAI,CAACC,IAAD,EAAOC,IAAP,IAAeH,CAAC,CAACF,KAAF,CAAQ,GAAR,CAAnB;AACAI,YAAAA,IAAI,GAAGA,IAAI,CAACE,KAAL,CAAW,CAAX,CAAP;AACA,gBAAI,CAACC,QAAD,IAAaH,IAAI,CAACJ,KAAL,CAAW,GAAX,CAAjB;AACA,gBAAIQ,SAAS,GAAG,EAAhB;;AACA,gBAAGb,IAAI,IAAIS,IAAI,GAAGZ,OAAlB,EAA2B;AAEzBgB,cAAAA,SAAS,GAAG,cAAZ;AACAb,cAAAA,IAAI,GAAG,KAAP;AACD;;AACD,gCAAO;AAAG,2BAAWS,IAAd;AAAoB,cAAA,SAAS,EAAEI,SAA/B;AAAA,wBAAqDH;AAArD,eAA+CF,GAA/C;AAAA;AAAA;AAAA;AAAA,oBAAP;AACD,WAXA;AADH;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAXF;AAAA;AAAA;AAAA;AAAA;AAAA;AAFF;AAgCD;;KApCQf,U;AAuCT,eAAeF,OAAO,CACnBuB,KAAD,KAAY;AACVnB,EAAAA,cAAc,EAAEmB,KAAK,CAACnB,cADZ;AAEVS,EAAAA,KAAK,EAAEU,KAAK,CAACV,KAFH;AAGVR,EAAAA,IAAI,EAAEkB,KAAK,CAAClB,IAHF;AAIVC,EAAAA,OAAO,EAAEiB,KAAK,CAACjB;AAJL,CAAZ,CADoB,EAOpB;AACEkB,EAAAA,QAAQ,EAAEvB;AADZ,CAPoB,CAAP,CAUbC,UAVa,CAAf","sourcesContent":["import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { getLyricAction } from '../../Redux/songActions'\r\nimport './index.css'\r\n\r\nfunction PlayerPage(props) {\r\n  const { playerPageOpen = false, song, curTime } = props;\r\n  console.log(\"playerPageOpen\", playerPageOpen)\r\n  let flag = true;\r\n  return (\r\n    // playerPageOpen &&\r\n    <div className='PlayerPage'>\r\n      {/* <img className='bg-effect' src={song?.al.picUrl}></img> */}\r\n      {/* <div className='player-cover-container'> */}\r\n      <button >âˆ¨</button>\r\n      <div className='player-cover'>\r\n        <div className='player-cover-img'>\r\n          <img src={song?.al.picUrl}></img>\r\n        </div>\r\n        <img className='shadow-effect' src={song?.al.picUrl}></img>\r\n      </div>\r\n      {/* </div> */}\r\n      <div className='player-right'>\r\n        <h2 className='player-song-name'>{song?.name}</h2>\r\n        <div className='player-lyric'>\r\n          {props.lyric.split('\\n').map((l, idx) => {\r\n            let [time, text] = l.split(']');\r\n            time = time.slice(1);\r\n            let [timeTemp] = time.split('.')\r\n            let className = ''\r\n            if(flag && time > curTime) {\r\n\r\n              className = 'lyric-active'\r\n              flag = false\r\n            }\r\n            return <p data-time={time} className={className} key={idx}>{text}</p>\r\n          })}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default connect(\r\n  (state) => ({\r\n    playerPageOpen: state.playerPageOpen,\r\n    lyric: state.lyric,\r\n    song: state.song,\r\n    curTime: state.curTime\r\n  }),\r\n  {\r\n    getLyric: getLyricAction\r\n  }\r\n)(PlayerPage)"]},"metadata":{},"sourceType":"module"}