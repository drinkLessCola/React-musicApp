{"ast":null,"code":"// action 为一个 对象 → 同步action\n// action 为一个函数 → 异步action\n// 因为函数里面能开启异步任务\nimport axios from \"axios\";\nimport store from \"./store\"; // 1: 单曲, 10: 专辑, 100: 歌手, 1000: 歌单, 1002: 用户, 1004: MV, 1006: 歌词, 1009: 电台, 1014: 视频,\n\nconst TYPE = {\n  'songs': 1,\n  'artists': 100,\n  'albums': 10,\n  'videos': 1014,\n  'songlists': 1000,\n  'lyrics': 10,\n  'users': 1002\n};\naxios.defaults.baseURL = 'https://netease-cloud-music-api-tawny-nine.vercel.app/';\naxios.defaults.withCredentials = true; // export const createSearchAction = (type, data) => ({type,data});\n// 异步任务会被传入一个 dispatch 参数供使用\n\nexport const createSearchAction = (type, data) => {\n  console.log('dispatch reach', type, data);\n  return async dispatch => {\n    console.log('await');\n    let res = await axios('/search', {\n      params: {\n        keywords: data,\n        type: TYPE[type]\n      }\n    });\n    console.log('await done', res);\n    dispatch({\n      type: 'updateData',\n      data: {\n        type: type,\n        data: res.data.result\n      }\n    });\n  };\n};\nexport const addNewSongAction = data => {\n  return async dispatch => {\n    let res = await axios(`/song/detail?ids=${data}`);\n    dispatch({\n      type: 'addSong',\n      data: res.data.songs[0]\n    });\n  };\n};\nexport const getMvAction = (id, duration) => {\n  return async dispatch => {\n    let res = await axios(`/video/url?id=${id}`);\n    dispatch({\n      type: 'watchMV',\n      data: {\n        video: res.data.urls[0],\n        duration\n      }\n    });\n  };\n};\nexport const loginAction = (phone, password) => {\n  return async dispatch => {\n    let res = await axios(`/login/cellphone?phone=${encodeURIComponent(phone)}&password=${encodeURIComponent(password)}`, {\n      withCredentials: true\n    });\n    console.log(res.data); // 未登录成功\n\n    if (res.status != 200) {\n      console.log(\"未登录成功\");\n      dispatch({\n        type: 'login',\n        data: {\n          user: null,\n          detail: null,\n          playlist: null\n        }\n      });\n      return;\n    } // 登录成功\n\n\n    console.log(\"登录成功\");\n    const {\n      account: {\n        vipType,\n        id\n      },\n      cookie,\n      profile: {\n        avatarUrl,\n        nickname\n      }\n    } = res.data;\n    let detail = await axios(`/user/detail?uid=${id}`);\n    let playlist = await axios(`/user/playlist?uid=${id}`);\n    let loginState = await axios('/login/status');\n    console.log('loginState', loginState);\n    console.log('detail', detail);\n    console.log('playlist', playlist);\n    dispatch({\n      type: 'login',\n      data: {\n        loginState,\n        user: res.data,\n        detail: detail.data,\n        playlist: playlist.data.playlist\n      }\n    });\n  };\n};\nexport const getLoginStateAction = () => {\n  return async dispatch => {\n    let res = await axios('/login/status');\n    console.log(res);\n    dispatch({\n      type: 'loginState',\n      data: res\n    });\n  };\n};\nexport const getUserDetail = uid => {};\nexport const logoutAction = () => {\n  return async dispatch => {\n    let res = await axios('/logout');\n    console.log(res);\n    dispatch({\n      type: 'logout',\n      data: null\n    });\n  };\n}; // 获取歌单列表\n\nexport const getPlayListAction = lid => {\n  return async dispatch => {\n    let res = await axios(`/playlist/detail?id=${lid}`);\n    console.log(\"playlist detail\", res);\n  };\n};","map":{"version":3,"sources":["E:/js/react/music-app/React-musicApp/src/Redux/searchActions.js"],"names":["axios","store","TYPE","defaults","baseURL","withCredentials","createSearchAction","type","data","console","log","dispatch","res","params","keywords","result","addNewSongAction","songs","getMvAction","id","duration","video","urls","loginAction","phone","password","encodeURIComponent","status","user","detail","playlist","account","vipType","cookie","profile","avatarUrl","nickname","loginState","getLoginStateAction","getUserDetail","uid","logoutAction","getPlayListAction","lid"],"mappings":"AAAA;AACA;AACA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,SAAlB,C,CACA;;AACA,MAAMC,IAAI,GAAG;AACX,WAAQ,CADG;AAEX,aAAU,GAFC;AAGX,YAAS,EAHE;AAIX,YAAS,IAJE;AAKX,eAAY,IALD;AAMX,YAAS,EANE;AAOX,WAAQ;AAPG,CAAb;AASAF,KAAK,CAACG,QAAN,CAAeC,OAAf,GAAyB,wDAAzB;AACAJ,KAAK,CAACG,QAAN,CAAeE,eAAf,GAAiC,IAAjC,C,CACA;AACA;;AACA,OAAO,MAAMC,kBAAkB,GAAG,CAACC,IAAD,EAAOC,IAAP,KAAgB;AAChDC,EAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BH,IAA9B,EAAoCC,IAApC;AACA,SAAO,MAAOG,QAAP,IAAoB;AACzBF,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACA,QAAIE,GAAG,GAAG,MAAMZ,KAAK,CAAC,SAAD,EAAW;AAC9Ba,MAAAA,MAAM,EAAC;AAACC,QAAAA,QAAQ,EAACN,IAAV;AAAeD,QAAAA,IAAI,EAACL,IAAI,CAACK,IAAD;AAAxB;AADuB,KAAX,CAArB;AAEAE,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BE,GAA1B;AAEAD,IAAAA,QAAQ,CAAC;AACPJ,MAAAA,IAAI,EAAE,YADC;AAEPC,MAAAA,IAAI,EAAE;AACJD,QAAAA,IAAI,EAAEA,IADF;AAEJC,QAAAA,IAAI,EAAEI,GAAG,CAACJ,IAAJ,CAASO;AAFX;AAFC,KAAD,CAAR;AAQD,GAdD;AAeD,CAjBM;AAmBP,OAAO,MAAMC,gBAAgB,GAAIR,IAAD,IAAU;AACxC,SAAO,MAAOG,QAAP,IAAoB;AACzB,QAAIC,GAAG,GAAG,MAAMZ,KAAK,CAAE,oBAAmBQ,IAAK,EAA1B,CAArB;AACAG,IAAAA,QAAQ,CAAC;AAACJ,MAAAA,IAAI,EAAC,SAAN;AAAiBC,MAAAA,IAAI,EAACI,GAAG,CAACJ,IAAJ,CAASS,KAAT,CAAe,CAAf;AAAtB,KAAD,CAAR;AACD,GAHD;AAID,CALM;AAOP,OAAO,MAAMC,WAAW,GAAG,CAACC,EAAD,EAAKC,QAAL,KAAiB;AAC1C,SAAO,MAAOT,QAAP,IAAoB;AACzB,QAAIC,GAAG,GAAG,MAAMZ,KAAK,CAAE,iBAAgBmB,EAAG,EAArB,CAArB;AACAR,IAAAA,QAAQ,CAAC;AAACJ,MAAAA,IAAI,EAAC,SAAN;AAAiBC,MAAAA,IAAI,EAAC;AAACa,QAAAA,KAAK,EAACT,GAAG,CAACJ,IAAJ,CAASc,IAAT,CAAc,CAAd,CAAP;AAAyBF,QAAAA;AAAzB;AAAtB,KAAD,CAAR;AACD,GAHD;AAID,CALM;AAOP,OAAO,MAAMG,WAAW,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAC9C,SAAO,MAAOd,QAAP,IAAoB;AAEzB,QAAIC,GAAG,GAAG,MAAMZ,KAAK,CAAE,0BAAyB0B,kBAAkB,CAACF,KAAD,CAAQ,aAAYE,kBAAkB,CAACD,QAAD,CAAW,EAA9F,EAAgG;AACnHpB,MAAAA,eAAe,EAAE;AADkG,KAAhG,CAArB;AAGAI,IAAAA,OAAO,CAACC,GAAR,CAAYE,GAAG,CAACJ,IAAhB,EALyB,CAOzB;;AACA,QAAGI,GAAG,CAACe,MAAJ,IAAc,GAAjB,EAAsB;AACpBlB,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACAC,MAAAA,QAAQ,CAAC;AAACJ,QAAAA,IAAI,EAAC,OAAN;AAAcC,QAAAA,IAAI,EAAC;AAACoB,UAAAA,IAAI,EAAC,IAAN;AAAYC,UAAAA,MAAM,EAAC,IAAnB;AAAyBC,UAAAA,QAAQ,EAAC;AAAlC;AAAnB,OAAD,CAAR;AACA;AACD,KAZwB,CAazB;;;AACArB,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACA,UAAM;AAACqB,MAAAA,OAAO,EAAC;AAACC,QAAAA,OAAD;AAAUb,QAAAA;AAAV,OAAT;AAAwBc,MAAAA,MAAxB;AAAgCC,MAAAA,OAAO,EAAC;AAACC,QAAAA,SAAD;AAAYC,QAAAA;AAAZ;AAAxC,QAAkExB,GAAG,CAACJ,IAA5E;AACA,QAAIqB,MAAM,GAAG,MAAM7B,KAAK,CAAE,oBAAmBmB,EAAG,EAAxB,CAAxB;AACA,QAAIW,QAAQ,GAAG,MAAM9B,KAAK,CAAE,sBAAqBmB,EAAG,EAA1B,CAA1B;AACA,QAAIkB,UAAU,GAAG,MAAMrC,KAAK,CAAC,eAAD,CAA5B;AAEAS,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0B2B,UAA1B;AACA5B,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBmB,MAAtB;AACApB,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBoB,QAAxB;AACAnB,IAAAA,QAAQ,CAAC;AAACJ,MAAAA,IAAI,EAAC,OAAN;AAAeC,MAAAA,IAAI,EAAE;AAAC6B,QAAAA,UAAD;AAAaT,QAAAA,IAAI,EAAChB,GAAG,CAACJ,IAAtB;AAA4BqB,QAAAA,MAAM,EAACA,MAAM,CAACrB,IAA1C;AAAgDsB,QAAAA,QAAQ,EAACA,QAAQ,CAACtB,IAAT,CAAcsB;AAAvE;AAArB,KAAD,CAAR;AACD,GAxBD;AAyBD,CA1BM;AA2BP,OAAO,MAAMQ,mBAAmB,GAAG,MAAM;AACvC,SAAO,MAAO3B,QAAP,IAAoB;AACzB,QAAIC,GAAG,GAAG,MAAMZ,KAAK,CAAC,eAAD,CAArB;AACAS,IAAAA,OAAO,CAACC,GAAR,CAAYE,GAAZ;AACAD,IAAAA,QAAQ,CAAC;AAACJ,MAAAA,IAAI,EAAC,YAAN;AAAoBC,MAAAA,IAAI,EAACI;AAAzB,KAAD,CAAR;AACD,GAJD;AAKD,CANM;AAQP,OAAO,MAAM2B,aAAa,GAAIC,GAAD,IAAS,CAErC,CAFM;AAIP,OAAO,MAAMC,YAAY,GAAG,MAAM;AAChC,SAAO,MAAO9B,QAAP,IAAoB;AACzB,QAAIC,GAAG,GAAG,MAAMZ,KAAK,CAAC,SAAD,CAArB;AACAS,IAAAA,OAAO,CAACC,GAAR,CAAYE,GAAZ;AACAD,IAAAA,QAAQ,CAAC;AAACJ,MAAAA,IAAI,EAAC,QAAN;AAAeC,MAAAA,IAAI,EAAC;AAApB,KAAD,CAAR;AACD,GAJD;AAKD,CANM,C,CAOP;;AACA,OAAO,MAAMkC,iBAAiB,GAAIC,GAAD,IAAS;AACxC,SAAO,MAAOhC,QAAP,IAAoB;AACzB,QAAIC,GAAG,GAAG,MAAMZ,KAAK,CAAE,uBAAsB2C,GAAI,EAA5B,CAArB;AACAlC,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BE,GAA/B;AACD,GAHD;AAID,CALM","sourcesContent":["// action 为一个 对象 → 同步action\r\n// action 为一个函数 → 异步action\r\n// 因为函数里面能开启异步任务\r\n\r\nimport axios from \"axios\"\r\nimport store from \"./store\";\r\n// 1: 单曲, 10: 专辑, 100: 歌手, 1000: 歌单, 1002: 用户, 1004: MV, 1006: 歌词, 1009: 电台, 1014: 视频,\r\nconst TYPE = {\r\n  'songs':1,\r\n  'artists':100,\r\n  'albums':10,\r\n  'videos':1014,\r\n  'songlists':1000,\r\n  'lyrics':10,\r\n  'users':1002,\r\n}\r\naxios.defaults.baseURL = 'https://netease-cloud-music-api-tawny-nine.vercel.app/'\r\naxios.defaults.withCredentials = true\r\n// export const createSearchAction = (type, data) => ({type,data});\r\n// 异步任务会被传入一个 dispatch 参数供使用\r\nexport const createSearchAction = (type, data) => {\r\n  console.log('dispatch reach', type, data)\r\n  return async (dispatch) => {\r\n    console.log('await')\r\n    let res = await axios('/search',{\r\n      params:{keywords:data,type:TYPE[type]}});\r\n    console.log('await done', res)\r\n    \r\n    dispatch({\r\n      type: 'updateData',\r\n      data: {\r\n        type: type,\r\n        data: res.data.result\r\n      }\r\n    })\r\n      \r\n  }\r\n}\r\n\r\nexport const addNewSongAction = (data) => {\r\n  return async (dispatch) => {\r\n    let res = await axios(`/song/detail?ids=${data}`);\r\n    dispatch({type:'addSong', data:res.data.songs[0]})\r\n  }\r\n}\r\n\r\nexport const getMvAction = (id, duration) =>{\r\n  return async (dispatch) => {\r\n    let res = await axios(`/video/url?id=${id}`)\r\n    dispatch({type:'watchMV', data:{video:res.data.urls[0], duration}})\r\n  }\r\n}\r\n\r\nexport const loginAction = (phone, password) => {\r\n  return async (dispatch) => {\r\n    \r\n    let res = await axios(`/login/cellphone?phone=${encodeURIComponent(phone)}&password=${encodeURIComponent(password)}`,{\r\n      withCredentials: true,\r\n    })\r\n    console.log(res.data);\r\n\r\n    // 未登录成功\r\n    if(res.status != 200) {\r\n      console.log(\"未登录成功\")\r\n      dispatch({type:'login',data:{user:null, detail:null, playlist:null}});\r\n      return;\r\n    }\r\n    // 登录成功\r\n    console.log(\"登录成功\")\r\n    const {account:{vipType, id}, cookie, profile:{avatarUrl, nickname} } = res.data;\r\n    let detail = await axios(`/user/detail?uid=${id}`);\r\n    let playlist = await axios(`/user/playlist?uid=${id}`);\r\n    let loginState = await axios('/login/status');\r\n\r\n    console.log('loginState', loginState);\r\n    console.log('detail', detail);\r\n    console.log('playlist', playlist);\r\n    dispatch({type:'login', data: {loginState, user:res.data, detail:detail.data, playlist:playlist.data.playlist}})\r\n  }\r\n}\r\nexport const getLoginStateAction = () => {\r\n  return async (dispatch) => {\r\n    let res = await axios('/login/status');\r\n    console.log(res);\r\n    dispatch({type:'loginState', data:res})\r\n  }\r\n}\r\n\r\nexport const getUserDetail = (uid) => {\r\n\r\n}\r\n\r\nexport const logoutAction = () => {\r\n  return async (dispatch) => {\r\n    let res = await axios('/logout');\r\n    console.log(res);\r\n    dispatch({type:'logout',data:null})\r\n  }\r\n}\r\n// 获取歌单列表\r\nexport const getPlayListAction = (lid) => {\r\n  return async (dispatch) => {\r\n    let res = await axios(`/playlist/detail?id=${lid}`);\r\n    console.log(\"playlist detail\", res)\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}