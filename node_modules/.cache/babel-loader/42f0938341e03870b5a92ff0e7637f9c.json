{"ast":null,"code":"var _jsxFileName = \"E:\\\\js\\\\react\\\\music-app\\\\React-musicApp\\\\src\\\\Component\\\\SideBar\\\\SongListBlock\\\\index.jsx\";\nimport React, { Component } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport LikedIcon from '../../../Icons/LikedIcon';\nimport UnlikedIcon from '../../../Icons/UnlikedIcon';\nimport ListIcon from '../../../Icons/ListIcon';\nimport { connect } from 'react-redux';\nimport { getPlayListAction } from '../../../Redux/searchActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TYPE = [\" \", \"创建的歌单\", \"收藏的歌单\"];\n\nfunction SongListBlock(props) {\n  function changePage(e) {\n    console.log(\"changePage\", e);\n    const target = e.target.closest('li');\n    console.log(target.dataset.id);\n    props.getPlayListAction(target.dataset.id);\n  } // userId\n  // updateTime\n  // playCount\n  // creator\n  // coverImgUrl\n  // anonimous\n\n\n  const {\n    playlist,\n    uid = null,\n    type\n  } = props;\n  console.log(\"playlist\", playlist);\n  console.log(\"uid\", uid);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"SideBar-unit\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"title\",\n      children: TYPE[type]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      onClick: changePage,\n      children: playlist.map((l, idx) => {\n        return /*#__PURE__*/_jsxDEV(NavLink, {\n          to: `/songlist/${l.id}`,\n          children: /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"list-item\",\n            \"data-id\": l.id,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"icon\",\n              children: l.specialType == 5 ? /*#__PURE__*/_jsxDEV(UnlikedIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 61\n              }, this) : /*#__PURE__*/_jsxDEV(ListIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 79\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 15\n            }, this), l.name]\n          }, idx, true, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n\n_c = SongListBlock;\nexport default connect(state => ({}), {\n  getPlayListAction: getPlayListAction\n})(SongListBlock);\n\nvar _c;\n\n$RefreshReg$(_c, \"SongListBlock\");","map":{"version":3,"sources":["E:/js/react/music-app/React-musicApp/src/Component/SideBar/SongListBlock/index.jsx"],"names":["React","Component","NavLink","LikedIcon","UnlikedIcon","ListIcon","connect","getPlayListAction","TYPE","SongListBlock","props","changePage","e","console","log","target","closest","dataset","id","playlist","uid","type","map","l","idx","specialType","name","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,kBAAxB;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,OAAOC,WAAP,MAAwB,4BAAxB;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,iBAAT,QAAkC,8BAAlC;;AACA,MAAMC,IAAI,GAAG,CACX,GADW,EAEX,OAFW,EAGX,OAHW,CAAb;;AAKA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC5B,WAASC,UAAT,CAAoBC,CAApB,EAAsB;AACpBC,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BF,CAA1B;AACA,UAAMG,MAAM,GAAGH,CAAC,CAACG,MAAF,CAASC,OAAT,CAAiB,IAAjB,CAAf;AACAH,IAAAA,OAAO,CAACC,GAAR,CAAYC,MAAM,CAACE,OAAP,CAAeC,EAA3B;AACAR,IAAAA,KAAK,CAACH,iBAAN,CAAwBQ,MAAM,CAACE,OAAP,CAAeC,EAAvC;AACD,GAN2B,CAS5B;AACA;AACA;AACA;AACA;AACA;;;AACA,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,GAAG,GAAC,IAAhB;AAAsBC,IAAAA;AAAtB,MAA+BX,KAArC;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBK,QAAxB;AACAN,EAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBM,GAAnB;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,gBAAwBZ,IAAI,CAACa,IAAD;AAA5B;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAI,MAAA,OAAO,EAAEV,UAAb;AAAA,gBACGQ,QAAQ,CAACG,GAAT,CAAa,CAACC,CAAD,EAAIC,GAAJ,KAAY;AAExB,4BACE,QAAC,OAAD;AAAS,UAAA,EAAE,EAAG,aAAYD,CAAC,CAACL,EAAG,EAA/B;AAAA,iCACA;AAAI,YAAA,SAAS,EAAC,WAAd;AAAoC,uBAASK,CAAC,CAACL,EAA/C;AAAA,oCACE;AAAK,cAAA,SAAS,EAAC,MAAf;AAAA,wBAAwBK,CAAC,CAACE,WAAF,IAAiB,CAAlB,gBAAuB,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,sBAAvB,gBAAyC,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAhE;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAA;AAAA;AAAA;AAAA,oBAFF,EAEgBF,CAAC,CAACG,IAFlB;AAAA,aAA+BF,GAA/B;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,gBADF;AAQD,OAVA;AADH;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD;;KArCQf,a;AAuCT,eAAeH,OAAO,CACpBqB,KAAK,KAAK,EAAL,CADe,EAEpB;AACEpB,EAAAA,iBAAiB,EAACA;AADpB,CAFoB,CAAP,CAKbE,aALa,CAAf","sourcesContent":["import React, { Component } from 'react'\r\nimport { NavLink } from 'react-router-dom';\r\nimport LikedIcon from '../../../Icons/LikedIcon';\r\nimport UnlikedIcon from '../../../Icons/UnlikedIcon';\r\nimport ListIcon from '../../../Icons/ListIcon';\r\nimport { connect } from 'react-redux';\r\nimport { getPlayListAction } from '../../../Redux/searchActions'\r\nconst TYPE = [\r\n  \" \",\r\n  \"创建的歌单\",\r\n  \"收藏的歌单\"\r\n]\r\nfunction SongListBlock(props) {\r\n  function changePage(e){\r\n    console.log(\"changePage\", e)\r\n    const target = e.target.closest('li');\r\n    console.log(target.dataset.id)\r\n    props.getPlayListAction(target.dataset.id);\r\n  }\r\n\r\n  \r\n  // userId\r\n  // updateTime\r\n  // playCount\r\n  // creator\r\n  // coverImgUrl\r\n  // anonimous\r\n  const { playlist, uid=null, type } = props;\r\n  console.log(\"playlist\", playlist)\r\n  console.log(\"uid\", uid)\r\n  return (\r\n    <div className=\"SideBar-unit\">\r\n      <div className=\"title\">{TYPE[type]}</div>\r\n      <ul onClick={changePage}>\r\n        {playlist.map((l, idx) => {\r\n          \r\n          return (\r\n            <NavLink to={`/songlist/${l.id}`}>\r\n            <li className=\"list-item\" key={idx} data-id={l.id}>\r\n              <div className='icon'>{(l.specialType == 5) ? <UnlikedIcon /> : <ListIcon />}</div>\r\n              <span></span>{l.name}\r\n            </li>\r\n            </NavLink>\r\n          )\r\n        }\r\n        )}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default connect(\r\n  state => ({}),\r\n  {\r\n    getPlayListAction:getPlayListAction,\r\n  }\r\n)(SongListBlock)\r\n\r\n"]},"metadata":{},"sourceType":"module"}