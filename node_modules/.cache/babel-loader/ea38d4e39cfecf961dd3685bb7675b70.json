{"ast":null,"code":"// action 为一个 对象 → 同步action\n// action 为一个函数 → 异步action\n// 因为函数里面能开启异步任务\nimport axios from \"axios\";\nimport store from \"./store\"; // 1: 单曲, 10: 专辑, 100: 歌手, 1000: 歌单, 1002: 用户, 1004: MV, 1006: 歌词, 1009: 电台, 1014: 视频,\n\nconst TYPE = {\n  'songs': 1,\n  'artists': 100,\n  'albums': 10,\n  'vedios': 1014,\n  'songlists': 1000,\n  'lyrics': 10,\n  'users': 1002\n}; // export const createSearchAction = (type, data) => ({type,data});\n// 异步任务会被传入一个 dispatch 参数供使用\n\nexport const createSearchAction = (type, data) => {\n  return async dispatch => {\n    let res = await axios(`http://localhost:4000/search?keywords=${data}&&type=${TYPE[type]}`);\n    dispatch({\n      type: 'updateData',\n      data: {\n        type: type,\n        data: res.data.result\n      }\n    });\n  };\n};\nexport const addNewSongAction = data => {\n  return async dispatch => {\n    let song = await axios(`http://localhost:4000/song/detail?ids=${data}`);\n    console.log(song.data.songs);\n    dispatch({\n      type: 'addSong',\n      data: song\n    });\n  };\n};","map":{"version":3,"sources":["E:/js/react/music-app/music-app/src/Redux/searchAction.js"],"names":["axios","store","TYPE","createSearchAction","type","data","dispatch","res","result","addNewSongAction","song","console","log","songs"],"mappings":"AAAA;AACA;AACA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,SAAlB,C,CACA;;AACA,MAAMC,IAAI,GAAG;AACX,WAAQ,CADG;AAEX,aAAU,GAFC;AAGX,YAAS,EAHE;AAIX,YAAS,IAJE;AAKX,eAAY,IALD;AAMX,YAAS,EANE;AAOX,WAAQ;AAPG,CAAb,C,CASA;AACA;;AACA,OAAO,MAAMC,kBAAkB,GAAG,CAACC,IAAD,EAAOC,IAAP,KAAgB;AAChD,SAAO,MAAOC,QAAP,IAAoB;AACzB,QAAIC,GAAG,GAAG,MAAMP,KAAK,CAAE,yCAAwCK,IAAK,UAASH,IAAI,CAACE,IAAD,CAAO,EAAnE,CAArB;AACAE,IAAAA,QAAQ,CAAC;AACPF,MAAAA,IAAI,EAAE,YADC;AAEPC,MAAAA,IAAI,EAAE;AACJD,QAAAA,IAAI,EAAEA,IADF;AAEJC,QAAAA,IAAI,EAAEE,GAAG,CAACF,IAAJ,CAASG;AAFX;AAFC,KAAD,CAAR;AAQD,GAVD;AAWD,CAZM;AAcP,OAAO,MAAMC,gBAAgB,GAAIJ,IAAD,IAAU;AACxC,SAAO,MAAOC,QAAP,IAAoB;AACzB,QAAII,IAAI,GAAG,MAAMV,KAAK,CAAE,yCAAwCK,IAAK,EAA/C,CAAtB;AACAM,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACL,IAAL,CAAUQ,KAAtB;AACAP,IAAAA,QAAQ,CAAC;AAACF,MAAAA,IAAI,EAAC,SAAN;AAAiBC,MAAAA,IAAI,EAACK;AAAtB,KAAD,CAAR;AACD,GAJD;AAKD,CANM","sourcesContent":["// action 为一个 对象 → 同步action\r\n// action 为一个函数 → 异步action\r\n// 因为函数里面能开启异步任务\r\n\r\nimport axios from \"axios\"\r\nimport store from \"./store\";\r\n// 1: 单曲, 10: 专辑, 100: 歌手, 1000: 歌单, 1002: 用户, 1004: MV, 1006: 歌词, 1009: 电台, 1014: 视频,\r\nconst TYPE = {\r\n  'songs':1,\r\n  'artists':100,\r\n  'albums':10,\r\n  'vedios':1014,\r\n  'songlists':1000,\r\n  'lyrics':10,\r\n  'users':1002,\r\n}\r\n// export const createSearchAction = (type, data) => ({type,data});\r\n// 异步任务会被传入一个 dispatch 参数供使用\r\nexport const createSearchAction = (type, data) => {\r\n  return async (dispatch) => {\r\n    let res = await axios(`http://localhost:4000/search?keywords=${data}&&type=${TYPE[type]}`);\r\n    dispatch({\r\n      type: 'updateData',\r\n      data: {\r\n        type: type,\r\n        data: res.data.result\r\n      }\r\n    })\r\n      \r\n  }\r\n}\r\n\r\nexport const addNewSongAction = (data) => {\r\n  return async (dispatch) => {\r\n    let song = await axios(`http://localhost:4000/song/detail?ids=${data}`);\r\n    console.log(song.data.songs);\r\n    dispatch({type:'addSong', data:song})\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}