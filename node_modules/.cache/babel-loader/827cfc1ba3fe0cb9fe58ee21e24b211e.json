{"ast":null,"code":"// 纯函数\n\n/**\r\n * \r\n * @param {*} preState 之前的状态\r\n * @param {*} action 动作对象\r\n */\nconst initState = {}; // preState == undefined 初始化\n\nexport default function searchReducer() {\n  let preState = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  console.log(preState, action);\n  const {\n    type,\n    data\n  } = action;\n\n  switch (type) {\n    case 'songs':\n      let res = axios(`http://localhost:4000/search?keywords=${data}&&type=1`); // PubSub.publish('search',res.data.result);\n\n      return {\n        songs: res.data.result.songs\n      };\n\n    case 'getSinger':\n      ;\n      break;\n\n    case 'getAlbums':\n      ;\n      break;\n\n    default:\n      return preState;\n  }\n}","map":{"version":3,"sources":["E:/js/react/music-app/music-app/src/Redux/searchReducer.js"],"names":["initState","searchReducer","preState","action","console","log","type","data","res","axios","songs","result"],"mappings":"AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAMA,SAAS,GAAG,EAAlB,C,CACA;;AACA,eAAe,SAASC,aAAT,GAAoD;AAAA,MAA7BC,QAA6B,uEAAlBF,SAAkB;AAAA,MAAPG,MAAO;AACjEC,EAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ,EAAsBC,MAAtB;AACA,QAAM;AAACG,IAAAA,IAAD;AAAOC,IAAAA;AAAP,MAAeJ,MAArB;;AACA,UAAOG,IAAP;AACE,SAAK,OAAL;AACE,UAAIE,GAAG,GAAGC,KAAK,CAAE,yCAAwCF,IAAK,UAA/C,CAAf,CADF,CAEE;;AACA,aAAO;AAACG,QAAAA,KAAK,EAACF,GAAG,CAACD,IAAJ,CAASI,MAAT,CAAgBD;AAAvB,OAAP;;AACF,SAAK,WAAL;AAAiB;AAAC;;AAClB,SAAK,WAAL;AAAiB;AAAC;;AAClB;AACE,aAAOR,QAAP;AARJ;AAUD","sourcesContent":["// 纯函数\r\n\r\n/**\r\n * \r\n * @param {*} preState 之前的状态\r\n * @param {*} action 动作对象\r\n */\r\nconst initState = {};\r\n// preState == undefined 初始化\r\nexport default function searchReducer(preState = initState, action){\r\n  console.log(preState, action)\r\n  const {type, data} = action;\r\n  switch(type){\r\n    case 'songs':\r\n      let res = axios(`http://localhost:4000/search?keywords=${data}&&type=1`)\r\n      // PubSub.publish('search',res.data.result);\r\n      return {songs:res.data.result.songs};\r\n    case 'getSinger':;break;\r\n    case 'getAlbums':;break;\r\n    default:\r\n      return preState;\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}