{"ast":null,"code":"var _jsxFileName = \"E:\\\\js\\\\react\\\\music-app\\\\React-musicApp\\\\src\\\\Component\\\\Main\\\\SearchResPage\\\\index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { Component } from 'react';\nimport { NavLink, Route } from 'react-router-dom';\nimport './index.css';\nimport SearchResSongs from './SearchResSongs';\nimport SearchResVideos from './SearchResVideos';\nimport SearchResArtists from './SearchResArtists';\nimport { createSearchAction } from '../../../Redux/searchActions';\nimport { connect } from 'react-redux';\nimport { Outlet, useLocation } from 'react-router-dom';\nimport { useSearchParams } from 'react-router-dom';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SearchResPage(props) {\n  _s();\n\n  const location = useLocation();\n  const [state, setState] = React.useState({\n    searchData: 'Rick and Morty',\n    tab: 'songs'\n  });\n\n  function getData(value, type) {\n    console.log('dispatch');\n    props.search(type, value);\n  }\n\n  function handleClick(e) {\n    console.log(location); // 比较点击的 tab 与 当前 tab 节流\n    // const searchData =  search.split('=')[1];\n\n    const searchData = location.search.split('=');\n    const type = e.target.closest('li').id;\n    if (state.tab == type) return; // 应该把 state 作为一个不可变的变量\n    // 方便进行时间回溯\n\n    getData(searchData, type);\n    setState({\n      tab: type\n    });\n  }\n\n  console.log('page', props);\n  const [search, setSearch] = useSearchParams();\n  const searchData = search.get('search'); // const searchData = search.search.split('=')[1];\n  // const type = props.location.pathname.slice(3);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"SearchResPage\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"\\u641C\\u7D22 \", decodeURIComponent(searchData)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"Search-Navbar\",\n      onClick: handleClick,\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        id: \"songs\",\n        children: /*#__PURE__*/_jsxDEV(NavLink, {\n          to: `/s/songs?search=${searchData}`,\n          children: \"\\u5355\\u66F2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 26\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        id: \"artists\",\n        children: /*#__PURE__*/_jsxDEV(NavLink, {\n          to: `/s/artists?search=${searchData}`,\n          children: \"\\u6B4C\\u624B\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 28\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        id: \"albums\",\n        children: /*#__PURE__*/_jsxDEV(NavLink, {\n          to: `/s/albums?search=${searchData}`,\n          children: \"\\u4E13\\u8F91\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 27\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        id: \"videos\",\n        children: /*#__PURE__*/_jsxDEV(NavLink, {\n          to: `/s/videos?search=${searchData}`,\n          children: \"\\u89C6\\u9891\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 27\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        id: \"songlists\",\n        children: /*#__PURE__*/_jsxDEV(NavLink, {\n          to: `/s/songlists?search=${searchData}`,\n          children: \"\\u6B4C\\u5355\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 30\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        id: \"lyrics\",\n        children: /*#__PURE__*/_jsxDEV(NavLink, {\n          to: `/s/lyrics?search=${searchData}`,\n          children: \"\\u6B4C\\u8BCD\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 27\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        id: \"users\",\n        children: /*#__PURE__*/_jsxDEV(NavLink, {\n          to: `/s/users?search=${searchData}`,\n          children: \"\\u7528\\u6237\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 26\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 7\n  }, this);\n}\n\n_s(SearchResPage, \"74BgS543r6+fdIubb0XifhBELhY=\", false, function () {\n  return [useLocation, useSearchParams];\n});\n\n_c = SearchResPage;\nexport default connect(state => ({}), {\n  search: createSearchAction\n})(SearchResPage);\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchResPage\");","map":{"version":3,"sources":["E:/js/react/music-app/React-musicApp/src/Component/Main/SearchResPage/index.jsx"],"names":["React","Component","NavLink","Route","SearchResSongs","SearchResVideos","SearchResArtists","createSearchAction","connect","Outlet","useLocation","useSearchParams","useNavigate","SearchResPage","props","location","state","setState","useState","searchData","tab","getData","value","type","console","log","search","handleClick","e","split","target","closest","id","setSearch","get","decodeURIComponent"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { NavLink, Route } from 'react-router-dom'\r\nimport './index.css';\r\nimport SearchResSongs from './SearchResSongs';\r\nimport SearchResVideos from './SearchResVideos'\r\nimport SearchResArtists from './SearchResArtists';\r\nimport { createSearchAction } from '../../../Redux/searchActions';\r\nimport { connect } from 'react-redux';\r\nimport { Outlet, useLocation } from 'react-router-dom';\r\nimport { useSearchParams } from 'react-router-dom';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nfunction SearchResPage(props){\r\n  const location = useLocation();\r\n  const [state, setState] = React.useState({\r\n    searchData:'Rick and Morty',\r\n    tab:'songs'\r\n  });\r\n  function getData(value, type){\r\n    console.log('dispatch');\r\n    props.search(type, value);\r\n  }\r\n  function handleClick(e){\r\n    console.log(location);\r\n    // 比较点击的 tab 与 当前 tab 节流\r\n    // const searchData =  search.split('=')[1];\r\n    const searchData =  location.search.split('=')\r\n    const type = e.target.closest('li').id;\r\n\r\n    if(state.tab == type) return;\r\n    // 应该把 state 作为一个不可变的变量\r\n    // 方便进行时间回溯\r\n    getData(searchData, type);\r\n    setState({\r\n      tab:type\r\n    })\r\n  }\r\n    console.log('page',props)\r\n    const [search, setSearch] = useSearchParams();\r\n    const searchData = search.get('search');\r\n    // const searchData = search.search.split('=')[1];\r\n    // const type = props.location.pathname.slice(3);\r\n    return (\r\n      <div className='SearchResPage'>\r\n        <h1>搜索 {decodeURIComponent(searchData)}</h1>\r\n        <ul className='Search-Navbar' onClick={handleClick}>\r\n          <li id='songs'><NavLink to={`/s/songs?search=${searchData}`}>单曲</NavLink></li>\r\n          <li id='artists'><NavLink to={`/s/artists?search=${searchData}`}>歌手</NavLink></li>\r\n          <li id='albums'><NavLink to={`/s/albums?search=${searchData}`}>专辑</NavLink></li>\r\n          <li id='videos'><NavLink to={`/s/videos?search=${searchData}`}>视频</NavLink></li>\r\n          <li id='songlists'><NavLink to={`/s/songlists?search=${searchData}`}>歌单</NavLink></li>\r\n          <li id='lyrics'><NavLink to={`/s/lyrics?search=${searchData}`}>歌词</NavLink></li>\r\n          <li id='users'><NavLink to={`/s/users?search=${searchData}`}>用户</NavLink></li>\r\n        </ul>\r\n        <Outlet></Outlet>\r\n        {/* <Switch>\r\n          <Route path='/s/songs' component={SearchResSongs}></Route>\r\n          <Route path='/s/artists' component={SearchResArtists}></Route>\r\n          <Route path='/s/albums' component={SearchResVideos}></Route>\r\n          <Route path='/s/videos' component={SearchResVideos}></Route>\r\n          <Route path='/s/songlists' component={SearchResSongs}></Route>\r\n          <Route path='/s/lyrics' component={SearchResSongs}></Route>\r\n          <Route path='/s/users' component={SearchResSongs}></Route>\r\n\r\n        </Switch> */}\r\n        {/* <SearchResSongs /> */}\r\n      </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default connect(\r\n  state => ({}),\r\n  {\r\n    search:createSearchAction,\r\n  }\r\n)(SearchResPage)"]},"metadata":{},"sourceType":"module"}