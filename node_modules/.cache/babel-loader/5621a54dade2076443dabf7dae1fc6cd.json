{"ast":null,"code":"var _jsxFileName = \"E:\\\\js\\\\react\\\\music-app\\\\React-musicApp\\\\src\\\\Component\\\\Bottom\\\\SongInfo\\\\index.jsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Liked from '../../../Liked';\nimport { togglePlayerPageAction } from '../../../Redux/playerPageAction';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass SongInfo extends Component {\n  handlePlayerPage() {\n    this.props.togglePlayerPage(this.props.song.id);\n    document.documentElement.style.setProperty('--box-shadow-img', this.props.song.al.imgUrl);\n  }\n\n  shouldComponentUpdate(nextProps) {\n    var _this$props;\n\n    console.log('!@', ((_this$props = this.props) === null || _this$props === void 0 ? void 0 : _this$props.song) && nextProps.song && this.props.song.name !== nextProps.song.name);\n    return this.props.song.name !== nextProps.song.name;\n  }\n\n  render() {\n    console.log('--------BOTTOM->SONGINFO render---------');\n    const {\n      song,\n      likedSongs\n    } = this.props;\n    if (song == null) return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"SongInfo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 29\n    }, this);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"SongInfo\",\n      onClick: this.handlePlayerPage.bind(this),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"SongImage\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"SongImage-image\",\n          src: song.al.picUrl,\n          alt: song.al.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 10\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"SongName\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"SongName-name\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: song.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Liked, {\n            like: likedSongs.has(song.id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"SongName-singer\",\n          children: song.ar.reduce((pre, a) => pre + (pre == '' ? '' : '/') + a.name, '')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default connect(state => ({\n  song: state.song,\n  likedSongs: new Set(state.likedList),\n  playerPageOpen: state.playerPageOpen\n}), {\n  togglePlayerPage: togglePlayerPageAction\n})(SongInfo);","map":{"version":3,"sources":["E:/js/react/music-app/React-musicApp/src/Component/Bottom/SongInfo/index.jsx"],"names":["React","Component","connect","Liked","togglePlayerPageAction","SongInfo","handlePlayerPage","props","togglePlayerPage","song","id","document","documentElement","style","setProperty","al","imgUrl","shouldComponentUpdate","nextProps","console","log","name","render","likedSongs","bind","picUrl","has","ar","reduce","pre","a","state","Set","likedList","playerPageOpen"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport Liked from '../../../Liked';\r\nimport { togglePlayerPageAction } from '../../../Redux/playerPageAction';\r\n\r\nclass SongInfo extends Component {\r\n  handlePlayerPage(){\r\n    this.props.togglePlayerPage(this.props.song.id);\r\n    document.documentElement.style.setProperty('--box-shadow-img', this.props.song.al.imgUrl)\r\n  }\r\n  shouldComponentUpdate(nextProps){\r\n    console.log('!@',this.props?.song && nextProps.song && this.props.song.name !== nextProps.song.name)\r\n    return this.props.song.name !== nextProps.song.name;\r\n  }\r\n  render() {\r\n    console.log('--------BOTTOM->SONGINFO render---------')\r\n    const {song, likedSongs} = this.props;\r\n    if(song == null) return <div className=\"SongInfo\"></div>;\r\n    return (\r\n      <div className=\"SongInfo\" onClick={this.handlePlayerPage.bind(this)}>\r\n        <div className=\"SongImage\">\r\n         <img\r\n            className=\"SongImage-image\"\r\n            src={song.al.picUrl}\r\n            alt={song.al.name}\r\n          />\r\n        </div>\r\n        <div className=\"SongName\">\r\n          <div className=\"SongName-name\">\r\n            <p>{song.name}</p>\r\n            <Liked like={likedSongs.has(song.id)} />\r\n          </div>\r\n          <div className=\"SongName-singer\">{song.ar.reduce((pre, a)=>pre + ((pre=='')?'':'/') + a.name,'')}</div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n}\r\n\r\nexport default connect(\r\n  state => ({\r\n    song:state.song,\r\n    likedSongs:new Set(state.likedList),\r\n    playerPageOpen:state.playerPageOpen\r\n  }),\r\n  {\r\n    togglePlayerPage:togglePlayerPageAction\r\n  }\r\n)(SongInfo)"]},"metadata":{},"sourceType":"module"}