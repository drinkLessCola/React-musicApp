{"ast":null,"code":"// 纯函数\n\n/**\r\n * \r\n * @param {*} preState 之前的状态\r\n * @param {*} action 动作对象\r\n */\nconst initState = {\n  songList: [],\n  curIdx: 0\n}; // preState == undefined 初始化\n\nexport default function searchReducer() {\n  let preState = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  console.log(preState, action);\n  const {\n    type,\n    data\n  } = action;\n\n  switch (type) {\n    case 'updateData':\n      return Object.assign({}, preState, {\n        [data.type]: data.data[data.type]\n      });\n\n    case 'addSong':\n      const {\n        songList,\n        curIdx\n      } = preState;\n      let newSongList = Array.from(songList).splice(curIdx, 0, data);\n      console.log('#', newSongList); // PubSub.publish('search',res.data.result);\n\n      return Object.assign({}, preState, {\n        songList: newSongList,\n        curIdx: curIdx + 1\n      });\n\n    case 'getSinger':\n      ;\n      break;\n\n    case 'getAlbums':\n      ;\n      break;\n\n    default:\n      return preState;\n  }\n}","map":{"version":3,"sources":["E:/js/react/music-app/music-app/src/Redux/searchReducer.js"],"names":["initState","songList","curIdx","searchReducer","preState","action","console","log","type","data","Object","assign","newSongList","Array","from","splice"],"mappings":"AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAMA,SAAS,GAAG;AAChBC,EAAAA,QAAQ,EAAE,EADM;AAEhBC,EAAAA,MAAM,EAAE;AAFQ,CAAlB,C,CAIA;;AACA,eAAe,SAASC,aAAT,GAAqD;AAAA,MAA9BC,QAA8B,uEAAnBJ,SAAmB;AAAA,MAARK,MAAQ;AAClEC,EAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ,EAAsBC,MAAtB;AACA,QAAM;AAAEG,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAiBJ,MAAvB;;AACA,UAAQG,IAAR;AACE,SAAK,YAAL;AACE,aAAOE,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBP,QAAlB,EACL;AACE,SAACK,IAAI,CAACD,IAAN,GAAaC,IAAI,CAACA,IAAL,CAAUA,IAAI,CAACD,IAAf;AADf,OADK,CAAP;;AAIF,SAAK,SAAL;AACE,YAAM;AAAEP,QAAAA,QAAF;AAAYC,QAAAA;AAAZ,UAAuBE,QAA7B;AACA,UAAIQ,WAAW,GAAGC,KAAK,CAACC,IAAN,CAAWb,QAAX,EAAqBc,MAArB,CAA4Bb,MAA5B,EAAoC,CAApC,EAAuCO,IAAvC,CAAlB;AACAH,MAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ,EAAiBK,WAAjB,EAHF,CAIE;;AACA,aAAOF,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBP,QAAlB,EACL;AACEH,QAAAA,QAAQ,EAAEW,WADZ;AAEEV,QAAAA,MAAM,EAAEA,MAAM,GAAG;AAFnB,OADK,CAAP;;AAKF,SAAK,WAAL;AAAkB;AAAE;;AACpB,SAAK,WAAL;AAAkB;AAAE;;AACpB;AACE,aAAOE,QAAP;AAnBJ;AAqBD","sourcesContent":["// 纯函数\r\n\r\n/**\r\n * \r\n * @param {*} preState 之前的状态\r\n * @param {*} action 动作对象\r\n */\r\nconst initState = {\r\n  songList: [],\r\n  curIdx: 0,\r\n};\r\n// preState == undefined 初始化\r\nexport default function searchReducer(preState = initState, action) {\r\n  console.log(preState, action)\r\n  const { type, data } = action;\r\n  switch (type) {\r\n    case 'updateData':\r\n      return Object.assign({}, preState,\r\n        {\r\n          [data.type]: data.data[data.type],\r\n        })\r\n    case 'addSong':\r\n      const { songList, curIdx } = preState;\r\n      let newSongList = Array.from(songList).splice(curIdx, 0, data);\r\n      console.log('#', newSongList)\r\n      // PubSub.publish('search',res.data.result);\r\n      return Object.assign({}, preState,\r\n        {\r\n          songList: newSongList,\r\n          curIdx: curIdx + 1\r\n        });\r\n    case 'getSinger': ; break;\r\n    case 'getAlbums': ; break;\r\n    default:\r\n      return preState;\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}