{"ast":null,"code":"var _jsxFileName = \"E:\\\\js\\\\react\\\\music-app\\\\React-musicApp\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport SideBar from './Component/SideBar';\nimport Bottom from './Component/Bottom';\nimport Header from './Component/Header';\nimport Main from './Component/Main';\nimport Login from './Component/Login';\nimport PlayerPage from './Component/PlayerPage';\nimport './App.css';\nimport PlayListBoard from './Component/PlayListBoard';\nimport { connect } from 'react-redux';\nimport { getLoginStateAction } from './Redux/searchActions';\nimport ThemeContext from './Context/ThemeContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App(props) {\n  _s();\n\n  const [state, setState] = React.useState({\n    isPlayListShowing: false,\n    // 显示播放列表\n    songListCurIdx: 1,\n    // 播放到了歌单的哪一首\n    mode: 0,\n    // 播放模式，0：列表循环 1：单曲循环 2：随机循环 3：顺序循环\n    songSrc: '',\n    loginState: null,\n    showLogin: false\n  });\n  useEffect(() => {\n    const res = (async () => {\n      return await props.getLoginState();\n    })();\n\n    console.log('res', res);\n  }, []);\n  const [theme, setTheme] = React.useState('light');\n  /**\n   * 修改主题模式\n   */\n\n  function toggleTheme() {\n    const isDark = theme === 'dark';\n    const bgColor = isDark ? '#fff' : '#202020';\n    const btnColor = isDark ? 'rgb(255, 202, 89)' : 'blueviolet';\n    document.documentElement.style.setProperty('--theme-bg-color', bgColor);\n    document.documentElement.style.setProperty('--btn-color', btnColor);\n    setTheme(isDark ? 'light' : 'dark');\n  }\n\n  console.log(state, setState);\n  const user = localStorage.getItem('user');\n  console.log(user);\n\n  function showPlayList() {\n    const {\n      isPlayListShowing\n    } = state;\n    setState({\n      isPlayListShowing: !isPlayListShowing\n    });\n  }\n\n  function showLogin() {\n    setState({\n      showLogin: true\n    });\n  }\n\n  function changeSong(num) {\n    const index = state.songListCurIdx;\n    const listLength = data.playList.songs.length;\n\n    if (state.mode === 2) {\n      num = Math.floor(Math.random() * (listLength - 2) + 1);\n    }\n\n    let newIdx = (index + num) % listLength;\n    console.log(index, newIdx);\n    setState({\n      songListCurIdx: newIdx\n    });\n  }\n\n  function changeMode(event) {\n    const {\n      mode\n    } = state;\n    setState({\n      mode: (mode + 1) % 4\n    });\n    event.preventDefault();\n    event.stopPropagation();\n  }\n\n  function handleClick(event) {\n    const target = event.target.closest('.PlayListBoard');\n    if (target || !state.isPlayListShowing) return;\n    setState({\n      isPlayListShowing: false\n    });\n  }\n\n  function getSong(event) {\n    console.log('e');\n    const musicFile = event.target.files[0];\n    let url = URL.createObjectURL(musicFile);\n    setState({\n      songSrc: url\n    });\n  }\n\n  console.log(state.showLogin); // React.useState\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    onClick: handleClick,\n    children: [/*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n      value: toggleTheme,\n      children: /*#__PURE__*/_jsxDEV(Header, {\n        showLogin: showLogin\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main\",\n      children: [/*#__PURE__*/_jsxDEV(SideBar, {\n        list: props.playlist\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Main, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), state.isPlayListShowing && /*#__PURE__*/_jsxDEV(PlayListBoard, {\n        list: data.playList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 37\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Bottom, {\n      song: data.playList.songs[state.songListCurIdx],\n      showPlayList: showPlayList,\n      changeSong: changeSong,\n      changeMode: changeMode,\n      mode: state.mode,\n      songSrc: state.songSrc\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PlayerPage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), state.showLogin && /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 27\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n} // 花括号外层要包裹小括号\n\n\n_s(App, \"1NFLo2A+jonIlqs3ZQtCRsec3ik=\");\n\n_c = App;\nexport default connect(state => ({\n  loginState: state.loginState,\n  detail: state.detail,\n  playlist: state.playlist\n}), {\n  getLoginState: getLoginStateAction\n})(App);\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["E:/js/react/music-app/React-musicApp/src/App.js"],"names":["React","useEffect","SideBar","Bottom","Header","Main","Login","PlayerPage","PlayListBoard","connect","getLoginStateAction","ThemeContext","App","props","state","setState","useState","isPlayListShowing","songListCurIdx","mode","songSrc","loginState","showLogin","res","getLoginState","console","log","theme","setTheme","toggleTheme","isDark","bgColor","btnColor","document","documentElement","style","setProperty","user","localStorage","getItem","showPlayList","changeSong","num","index","listLength","data","playList","songs","length","Math","floor","random","newIdx","changeMode","event","preventDefault","stopPropagation","handleClick","target","closest","getSong","musicFile","files","url","URL","createObjectURL","playlist","detail"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react'\nimport SideBar from './Component/SideBar';\nimport Bottom from './Component/Bottom';\nimport Header from './Component/Header';\nimport Main from './Component/Main';\nimport Login from './Component/Login';\nimport PlayerPage from './Component/PlayerPage'\n\nimport './App.css'\nimport PlayListBoard from './Component/PlayListBoard';\nimport { connect } from 'react-redux';\nimport { getLoginStateAction } from './Redux/searchActions';\n\nimport ThemeContext from './Context/ThemeContext';\n\nfunction App(props) {\n  const [state, setState] = React.useState({\n    isPlayListShowing: false,  // 显示播放列表\n    songListCurIdx: 1,         // 播放到了歌单的哪一首\n    mode: 0,                   // 播放模式，0：列表循环 1：单曲循环 2：随机循环 3：顺序循环\n    songSrc: '',\n    loginState: null,\n    showLogin:false,\n  });\n\n  useEffect(() => {\n    const res = (async() => {\n      return await props.getLoginState();\n    })();\n    console.log('res', res)\n  },[]);\n  const [theme, setTheme] = React.useState('light')\n  /**\n   * 修改主题模式\n   */\n  function toggleTheme(){\n    const isDark = theme === 'dark';\n    const bgColor = isDark? '#fff' : '#202020';\n    const btnColor = isDark? 'rgb(255, 202, 89)' : 'blueviolet';\n    document.documentElement.style.setProperty('--theme-bg-color', bgColor)\n    document.documentElement.style.setProperty('--btn-color', btnColor)\n    setTheme(isDark? 'light' : 'dark')\n  }\n\n  console.log(state, setState)\n  const user = localStorage.getItem('user');\n  console.log(user);\n\n  function showPlayList() {\n    const { isPlayListShowing } = state;\n    setState({\n      isPlayListShowing: !isPlayListShowing,\n    });\n  }\n  function showLogin(){\n    setState({showLogin:true});\n  }\n  function changeSong(num) {\n\n    const index = state.songListCurIdx;\n    const listLength = data.playList.songs.length;\n\n    if (state.mode === 2) {\n      num = Math.floor(Math.random() * (listLength - 2) + 1);\n    }\n    let newIdx = (index + num) % listLength;\n    console.log(index, newIdx)\n    setState({\n      songListCurIdx: newIdx,\n    })\n  }\n  function changeMode(event) {\n\n    const { mode } = state;\n    setState({\n      mode: (mode + 1) % 4,\n    })\n    event.preventDefault();\n    event.stopPropagation();\n  }\n  function handleClick(event){\n    const target = event.target.closest('.PlayListBoard');\n    if (target || !state.isPlayListShowing) return;\n    setState({\n      isPlayListShowing: false,\n    });\n  }\n  function getSong(event){\n    console.log('e')\n    const musicFile = event.target.files[0];\n    let url = URL.createObjectURL(musicFile);\n    setState({\n      songSrc: url,\n    })\n  }\n  console.log(state.showLogin)\n  // React.useState\n  return (\n    <div className=\"App\" onClick={handleClick}>\n      <ThemeContext.Provider value={toggleTheme}>\n        <Header showLogin={showLogin}/>\n      </ThemeContext.Provider>\n      <div className=\"main\">\n        <SideBar list={props.playlist} />\n        <Main>\n        </Main>\n        {state.isPlayListShowing && <PlayListBoard list={data.playList} />}\n      </div>\n      <Bottom\n        song={data.playList.songs[state.songListCurIdx]}\n        showPlayList={showPlayList}\n        changeSong={changeSong}\n        changeMode={changeMode}\n        mode={state.mode}\n        songSrc={state.songSrc}\n      />\n      <PlayerPage />\n      {state.showLogin && <Login></Login>}\n    </div>\n  );\n\n}\n\n\n\n\n// 花括号外层要包裹小括号\nexport default connect(\n  state => ({\n    loginState:state.loginState,\n    detail:state.detail,\n    playlist:state.playlist,\n  }),\n  {\n    getLoginState:getLoginStateAction\n  }\n)(App)"]},"metadata":{},"sourceType":"module"}