{"ast":null,"code":"// 纯函数\n\n/**\r\n * \r\n * @param {*} preState 之前的状态\r\n * @param {*} action 动作对象\r\n */\nconst initState = {}; // preState == undefined 初始化\n\nexport default function searchReducer() {\n  let preState = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  console.log(preState, action);\n  const {\n    type,\n    data\n  } = action;\n\n  switch (type) {\n    case 'updataData':\n      console.log(data.type, data.data[data.type]);\n      return {\n        [data.type]: data.data[data.type]\n      };\n\n    case 'songs':\n      // PubSub.publish('search',res.data.result);\n      break;\n\n    case 'getSinger':\n      ;\n      break;\n\n    case 'getAlbums':\n      ;\n      break;\n\n    default:\n      return preState;\n  }\n}","map":{"version":3,"sources":["E:/js/react/music-app/music-app/src/Redux/searchReducer.js"],"names":["initState","searchReducer","preState","action","console","log","type","data"],"mappings":"AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAMA,SAAS,GAAG,EAAlB,C,CACA;;AACA,eAAe,SAASC,aAAT,GAAoD;AAAA,MAA7BC,QAA6B,uEAAlBF,SAAkB;AAAA,MAAPG,MAAO;AACjEC,EAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ,EAAsBC,MAAtB;AACA,QAAM;AAACG,IAAAA,IAAD;AAAOC,IAAAA;AAAP,MAAeJ,MAArB;;AACA,UAAOG,IAAP;AACE,SAAK,YAAL;AACEF,MAAAA,OAAO,CAACC,GAAR,CAAYE,IAAI,CAACD,IAAjB,EAAuBC,IAAI,CAACA,IAAL,CAAUA,IAAI,CAACD,IAAf,CAAvB;AACA,aAAO;AACL,SAACC,IAAI,CAACD,IAAN,GAAYC,IAAI,CAACA,IAAL,CAAUA,IAAI,CAACD,IAAf;AADP,OAAP;;AAGF,SAAK,OAAL;AACE;AACA;;AACF,SAAK,WAAL;AAAiB;AAAC;;AAClB,SAAK,WAAL;AAAiB;AAAC;;AAClB;AACE,aAAOJ,QAAP;AAZJ;AAcD","sourcesContent":["// 纯函数\r\n\r\n/**\r\n * \r\n * @param {*} preState 之前的状态\r\n * @param {*} action 动作对象\r\n */\r\nconst initState = {};\r\n// preState == undefined 初始化\r\nexport default function searchReducer(preState = initState, action){\r\n  console.log(preState, action)\r\n  const {type, data} = action;\r\n  switch(type){\r\n    case 'updataData':\r\n      console.log(data.type, data.data[data.type])\r\n      return {\r\n        [data.type]:data.data[data.type],\r\n      }\r\n    case 'songs':\r\n      // PubSub.publish('search',res.data.result);\r\n      break;\r\n    case 'getSinger':;break;\r\n    case 'getAlbums':;break;\r\n    default:\r\n      return preState;\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}