{"ast":null,"code":"// action 为一个 对象 → 同步action\n// action 为一个函数 → 异步action\n// 因为函数里面能开启异步任务\nimport axios from \"axios\";\nimport store from \"./store\"; // 1: 单曲, 10: 专辑, 100: 歌手, 1000: 歌单, 1002: 用户, 1004: MV, 1006: 歌词, 1009: 电台, 1014: 视频,\n\nconst TYPE = {\n  'songs': 1,\n  'singers': 100,\n  'albums': 10,\n  'vedios': 1014,\n  'songlists': 1000,\n  'lyrics': 10,\n  'users': 1002\n}; // export const createSearchAction = (type, data) => ({type,data});\n\nexport const createSearchAction = (type, data) => {\n  return async () => {\n    console.log(type, TYPE[type], data);\n    let res = await axios(`http://localhost:4000/search?keywords=${data}&&type=${TYPE[type]}`);\n    store.dispatch({\n      type: 'updateData',\n      data: {\n        type: type,\n        data: res.data.result\n      }\n    });\n  };\n};","map":{"version":3,"sources":["E:/js/react/music-app/music-app/src/Redux/searchAction.js"],"names":["axios","store","TYPE","createSearchAction","type","data","console","log","res","dispatch","result"],"mappings":"AAAA;AACA;AACA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,SAAlB,C,CACA;;AACA,MAAMC,IAAI,GAAG;AACX,WAAQ,CADG;AAEX,aAAU,GAFC;AAGX,YAAS,EAHE;AAIX,YAAS,IAJE;AAKX,eAAY,IALD;AAMX,YAAS,EANE;AAOX,WAAQ;AAPG,CAAb,C,CASA;;AACA,OAAO,MAAMC,kBAAkB,GAAG,CAACC,IAAD,EAAOC,IAAP,KAAgB;AAChD,SAAO,YAAY;AACjBC,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ,EAAkBF,IAAI,CAACE,IAAD,CAAtB,EAA8BC,IAA9B;AACA,QAAIG,GAAG,GAAG,MAAMR,KAAK,CAAE,yCAAwCK,IAAK,UAASH,IAAI,CAACE,IAAD,CAAO,EAAnE,CAArB;AACAH,IAAAA,KAAK,CAACQ,QAAN,CAAe;AACbL,MAAAA,IAAI,EAAE,YADO;AAEbC,MAAAA,IAAI,EAAE;AACJD,QAAAA,IAAI,EAAEA,IADF;AAEJC,QAAAA,IAAI,EAAEG,GAAG,CAACH,IAAJ,CAASK;AAFX;AAFO,KAAf;AAQD,GAXD;AAYD,CAbM","sourcesContent":["// action 为一个 对象 → 同步action\r\n// action 为一个函数 → 异步action\r\n// 因为函数里面能开启异步任务\r\n\r\nimport axios from \"axios\"\r\nimport store from \"./store\";\r\n// 1: 单曲, 10: 专辑, 100: 歌手, 1000: 歌单, 1002: 用户, 1004: MV, 1006: 歌词, 1009: 电台, 1014: 视频,\r\nconst TYPE = {\r\n  'songs':1,\r\n  'singers':100,\r\n  'albums':10,\r\n  'vedios':1014,\r\n  'songlists':1000,\r\n  'lyrics':10,\r\n  'users':1002,\r\n}\r\n// export const createSearchAction = (type, data) => ({type,data});\r\nexport const createSearchAction = (type, data) => {\r\n  return async () => {\r\n    console.log(type, TYPE[type], data)\r\n    let res = await axios(`http://localhost:4000/search?keywords=${data}&&type=${TYPE[type]}`);\r\n    store.dispatch({\r\n      type: 'updateData',\r\n      data: {\r\n        type: type,\r\n        data: res.data.result\r\n      }\r\n    })\r\n      \r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}