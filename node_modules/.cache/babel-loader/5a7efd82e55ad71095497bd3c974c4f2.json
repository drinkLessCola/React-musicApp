{"ast":null,"code":"var _jsxFileName = \"E:\\\\js\\\\react\\\\music-app\\\\React-musicApp\\\\src\\\\Component\\\\Header\\\\Search\\\\index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { Component } from 'react';\nimport SearchIcon from '../../../Icons/SearchIcon';\nimport { createSearchAction } from '../../../Redux/searchActions';\nimport { useNavigate } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Search() {\n  _s();\n\n  const {\n    navigate\n  } = useNavigate();\n\n  function getData(value, type) {\n    props.search(type, value);\n  }\n\n  function handleKeyDown(event) {\n    if (event.key != 'Enter') return;\n    console.log('Enter');\n    const value = event.target.value; // debug了很久的一个问题，如何在一般组件中实现跳转，\n    // 使用 withRouter\n    // 传递 search 参数？前面不要打斜线\n    // getSongs(value)\n\n    getData(value, 'songs');\n    navigate(`/s/songs?search=${value}`);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Search\",\n    children: [/*#__PURE__*/_jsxDEV(SearchIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      onKeyDown: handleKeyDown\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 7\n  }, this);\n} // withRouter 和 connect 一起使用！！\n// export default withRouter(connect(\n//   state => ({}),\n//   {\n//     search:createSearchAction,\n//   }\n// )(Search));\n\n\n_s(Search, \"BRpBV9v2yKbDZGS2TF1W0Kb45LI=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Search;\nexport default connect(state => ({}), {\n  search: createSearchAction\n})(Search);\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["E:/js/react/music-app/React-musicApp/src/Component/Header/Search/index.jsx"],"names":["React","Component","SearchIcon","createSearchAction","useNavigate","connect","Search","navigate","getData","value","type","props","search","handleKeyDown","event","key","console","log","target","state"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,SAASC,kBAAT,QAAmC,8BAAnC;AACA,SAASC,WAAT,QAA2B,kBAA3B;AACA,SAAQC,OAAR,QAAsB,aAAtB;;;AACA,SAASC,MAAT,GAAiB;AAAA;;AACf,QAAM;AAACC,IAAAA;AAAD,MAAaH,WAAW,EAA9B;;AACA,WAASI,OAAT,CAAiBC,KAAjB,EAAwBC,IAAxB,EAA6B;AAC3BC,IAAAA,KAAK,CAACC,MAAN,CAAaF,IAAb,EAAmBD,KAAnB;AACD;;AAED,WAASI,aAAT,CAAuBC,KAAvB,EAA6B;AAC3B,QAAGA,KAAK,CAACC,GAAN,IAAa,OAAhB,EAAyB;AACzBC,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACA,UAAMR,KAAK,GAAGK,KAAK,CAACI,MAAN,CAAaT,KAA3B,CAH2B,CAI3B;AACA;AACA;AACA;;AACAD,IAAAA,OAAO,CAACC,KAAD,EAAO,OAAP,CAAP;AACAF,IAAAA,QAAQ,CAAE,mBAAkBE,KAAM,EAA1B,CAAR;AACD;;AAEC,sBACE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA,4BACE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAO,MAAA,SAAS,EAAEI;AAAlB;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOH,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;;;GAjCSP,M;UACYF,W;;;KADZE,M;AAmCT,eAAeD,OAAO,CACpBc,KAAK,KAAK,EAAL,CADe,EAEpB;AACEP,EAAAA,MAAM,EAACT;AADT,CAFoB,CAAP,CAKbG,MALa,CAAf","sourcesContent":["import React, { Component } from 'react'\r\nimport SearchIcon from '../../../Icons/SearchIcon'\r\nimport { createSearchAction } from '../../../Redux/searchActions';\r\nimport { useNavigate} from 'react-router-dom';\r\nimport {connect} from 'react-redux'\r\nfunction Search(){\r\n  const {navigate} = useNavigate();\r\n  function getData(value, type){\r\n    props.search(type, value);\r\n  }\r\n\r\n  function handleKeyDown(event){\r\n    if(event.key != 'Enter') return;\r\n    console.log('Enter');\r\n    const value = event.target.value;\r\n    // debug了很久的一个问题，如何在一般组件中实现跳转，\r\n    // 使用 withRouter\r\n    // 传递 search 参数？前面不要打斜线\r\n    // getSongs(value)\r\n    getData(value,'songs');\r\n    navigate(`/s/songs?search=${value}`);\r\n  }\r\n\r\n    return (\r\n      <div className='Search'>\r\n        <SearchIcon />\r\n        <input onKeyDown={handleKeyDown}></input>\r\n      </div>\r\n    )\r\n  \r\n}\r\n\r\n// withRouter 和 connect 一起使用！！\r\n// export default withRouter(connect(\r\n//   state => ({}),\r\n//   {\r\n//     search:createSearchAction,\r\n//   }\r\n// )(Search));\r\n\r\nexport default connect(\r\n  state => ({}),\r\n  {\r\n    search:createSearchAction,\r\n  }\r\n)(Search);\r\n"]},"metadata":{},"sourceType":"module"}