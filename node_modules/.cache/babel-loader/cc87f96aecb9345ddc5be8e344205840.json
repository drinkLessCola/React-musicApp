{"ast":null,"code":"// 纯函数\n\n/**\r\n * \r\n * @param {*} preState 之前的状态\r\n * @param {*} action 动作对象\r\n */\nconst initState = {\n  songList: [],\n  curIdx: 0,\n  song: null,\n  video: null,\n  user: {\n    loginState: false,\n    user: null,\n    detail: null,\n    playlist: []\n  },\n  playlist: {\n    songs: []\n  },\n  home: {\n    banners: [],\n    dailyRecommend: []\n  }\n}; // preState == undefined 初始化\n\nexport default function searchReducer() {\n  let preState = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  console.log(preState, action);\n  const {\n    type,\n    data\n  } = action;\n\n  switch (type) {\n    case 'updateData':\n      return Object.assign({}, preState, {\n        [data.type]: data.data[data.type]\n      });\n\n    case 'banner':\n      return Object.assign({}, preState, {\n        home: Object.assign({}, preState.home, {\n          banners: data\n        })\n      });\n\n    case 'recommentList':\n      return Object.assign({}, preState, {\n        home: Object.assign({}, preState.home, {\n          dailyRecommend: data\n        })\n      });\n\n    case 'addSong':\n      const {\n        songList,\n        curIdx\n      } = preState;\n      console.log('addSong', songList, data); // 这两句要分开写！！\n\n      let newSongList = Array.from(songList);\n      newSongList.splice(curIdx, 0, data);\n      console.log('#', newSongList);\n      return Object.assign({}, preState, {\n        songList: newSongList,\n        curIdx: curIdx + 1,\n        song: data\n      });\n\n    case 'replaceList':\n      return Object.assign({}, preState, {\n        songList: data.songs,\n        curIdx: data.id,\n        song: data.songs[data.id]\n      });\n\n    case 'watchMV':\n      return Object.assign({}, preState, {\n        video: data.video,\n        duration: data.duration\n      });\n\n    case 'login':\n      return Object.assign({}, preState, {\n        user: {\n          loginState: data.loginState,\n          user: data.user,\n          detail: data.detail,\n          playlist: data.playlist\n        }\n      });\n\n    case 'loginState':\n      return Object.assign({}, preState, {\n        isLogin: data\n      });\n\n    case 'getPlayListAction':\n      return Object.assign({}, preState, {\n        playlist: Object.assign({}, preState.playlist, {\n          name: data.name,\n          coverImgUrl: data.coverImgUrl,\n          tags: data.tags,\n          creator: data.creator\n        })\n      });\n\n    case 'getPlayListSongs':\n      return Object.assign({}, preState, {\n        playlist: Object.assign({}, preState.playlist, {\n          songs: data\n        })\n      });\n\n    case 'getSinger':\n      ;\n      break;\n\n    case 'getAlbums':\n      ;\n      break;\n\n    case 'prev':\n      return Object.assign({}, preState, {\n        curIdx: +preState.curIdx - 1,\n        song: preState.songList[+preState.curIdx - 1]\n      });\n\n    case 'next':\n      return Object.assign({}, preState, {\n        curIdx: +preState.curIdx + 1,\n        song: preState.songList[+preState.curIdx + 1]\n      });\n\n    default:\n      return preState;\n  }\n}","map":{"version":3,"sources":["E:/js/react/music-app/React-musicApp/src/Redux/searchReducer.js"],"names":["initState","songList","curIdx","song","video","user","loginState","detail","playlist","songs","home","banners","dailyRecommend","searchReducer","preState","action","console","log","type","data","Object","assign","newSongList","Array","from","splice","id","duration","isLogin","name","coverImgUrl","tags","creator"],"mappings":"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","sourcesContent":["// 纯函数\r\n\r\n/**\r\n * \r\n * @param {*} preState 之前的状态\r\n * @param {*} action 动作对象\r\n */\r\nconst initState = {\r\n  songList: [],\r\n  curIdx: 0,\r\n  song:null,\r\n  video:null,\r\n  user:{\r\n    loginState:false,\r\n    user:null,\r\n    detail:null,\r\n    playlist:[]\r\n  },\r\n  playlist:{\r\n    songs:[]\r\n  },\r\n  home:{\r\n    banners:[],\r\n    dailyRecommend:[]\r\n  }\r\n};\r\n// preState == undefined 初始化\r\nexport default function searchReducer(preState = initState, action) {\r\n  console.log(preState, action)\r\n  const { type, data } = action;\r\n  switch (type) {\r\n    case 'updateData':\r\n      return Object.assign({}, preState,\r\n        {\r\n          [data.type]: data.data[data.type],\r\n        })\r\n    case 'banner':\r\n      return Object.assign({},preState,{\r\n        home:Object.assign({}, preState.home, {\r\n          banners:data\r\n        })\r\n      })\r\n    case 'recommentList':\r\n      return Object.assign({}, preState, {\r\n        home:Object.assign({}, preState.home, {\r\n          dailyRecommend:data\r\n        })\r\n      })\r\n    case 'addSong':\r\n      const { songList, curIdx } = preState;\r\n      console.log('addSong', songList , data);\r\n      // 这两句要分开写！！\r\n      let newSongList = Array.from(songList)\r\n      newSongList.splice(curIdx, 0, data);\r\n\r\n      console.log('#', newSongList)\r\n      return Object.assign({}, preState,\r\n        {\r\n          songList: newSongList,\r\n          curIdx: curIdx + 1,\r\n          song:data,\r\n        });\r\n    case 'replaceList': return Object.assign({},preState,\r\n      {\r\n        songList:data.songs,\r\n        curIdx:data.id,\r\n        song:data.songs[data.id]\r\n      })\r\n    case 'watchMV':return Object.assign({},preState,{\r\n      video:data.video,\r\n      duration:data.duration\r\n    });\r\n    case 'login':return Object.assign({}, preState, {\r\n      user:{\r\n        loginState:data.loginState,\r\n        user:data.user,\r\n        detail:data.detail,\r\n        playlist:data.playlist\r\n      }\r\n    });\r\n    case 'loginState':return Object.assign({}, preState, {\r\n      isLogin:data,\r\n    });\r\n    case 'getPlayListAction': return Object.assign({}, preState, {\r\n      playlist:Object.assign({}, preState.playlist,{\r\n        name:data.name,\r\n        coverImgUrl:data.coverImgUrl,\r\n        tags:data.tags,\r\n        creator:data.creator,\r\n      }),\r\n    })\r\n    case 'getPlayListSongs': return Object.assign({}, preState, {\r\n      playlist:Object.assign({}, preState.playlist, {\r\n        songs:data,\r\n      })\r\n    });\r\n    case 'getSinger': ; break;\r\n    case 'getAlbums': ; break;\r\n    case 'prev': return Object.assign({}, preState, {\r\n      curIdx:(+preState.curIdx) - 1,\r\n      song:preState.songList[\r\n        +preState.curIdx - 1]\r\n    });\r\n    case 'next': return Object.assign({}, preState, {\r\n      curIdx:(+preState.curIdx) + 1,\r\n      song:preState.songList[\r\n        +preState.curIdx + 1]\r\n    })\r\n    default:\r\n      return preState;\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}