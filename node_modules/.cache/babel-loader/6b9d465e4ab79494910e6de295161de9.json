{"ast":null,"code":"var _jsxFileName = \"E:\\\\js\\\\react\\\\music-app\\\\React-musicApp\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport SideBar from './Component/SideBar';\nimport Bottom from './Component/Bottom';\nimport Header from './Component/Header';\nimport Main from './Component/Main';\nimport Login from './Component/Login';\nimport PlayerPage from './Component/PlayerPage';\nimport './App.css';\nimport { connect } from 'react-redux';\nimport { getLoginStateAction } from './Redux/searchActions';\nimport ThemeContext from './Context/ThemeContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst THEME = {\n  light: {\n    bgColor: '#fefefe',\n    navColor: '#fff',\n    hoverColor: '#f0f1f2',\n    textColor: '#555',\n    titleColor: '#aaa',\n    tableStripeColor: '#f9f9f9',\n    activeColor: 'rgb(255, 187, 29)',\n    btnColor: 'rgb(255, 202, 89)'\n  },\n  dark: {\n    bgColor: '#1b1b1b',\n    navColor: '#202020',\n    hoverColor: '0b0b0b',\n    textColor: '#ddd',\n    titleColor: '#ccc',\n    tableStripeColor: '#202020',\n    activeColor: '\tMediumPurple',\n    btnColor: '\tMediumSlateBlue'\n  }\n};\n\nfunction App(props) {\n  _s();\n\n  console.log('--------APP render---------');\n  const [state, setState] = React.useState({\n    isPlayListShowing: false,\n    // 显示播放列表\n    songListCurIdx: 1,\n    // 播放到了歌单的哪一首\n    mode: 0,\n    // 播放模式，0：列表循环 1：单曲循环 2：随机循环 3：顺序循环\n    songSrc: '',\n    loginState: null,\n    showLogin: false\n  });\n  useEffect(() => {\n    const res = (async () => {\n      return await props.getLoginState();\n    })();\n\n    console.log('res', res);\n  }, []);\n  const user = localStorage.getItem('user');\n  console.log(user);\n  const [theme, setTheme] = React.useState('light');\n  /**\n   * 修改主题模式\n   */\n\n  const toggleTheme = () => {\n    console.log('【toggleTheme】');\n    const newTheme = theme == 'dark' ? theme.light : THEME.dark;\n    bgColor;\n    navColor;\n    hoverColor;\n    textColor;\n    titleColor;\n    tableStripeColor;\n    activeColor;\n    btnColor;\n    document.documentElement.style.setProperty('--bg-color', newTheme.bgColor);\n    document.documentElement.style.setProperty('--nav-color', newTheme.navColor);\n    document.documentElement.style.setProperty('--hover-color', newTheme.hoverColor);\n    document.documentElement.style.setProperty('--text-color', newTheme.textColor);\n    document.documentElement.style.setProperty('--title-color', newTheme.titleColor);\n    document.documentElement.style.setProperty('--table-stripe-color', newTheme.tableStripeColor);\n    document.documentElement.style.setProperty('--active-color', newTheme.activeColor);\n    document.documentElement.style.setProperty('--btn-color', newTheme.btnColor);\n    console.log(bgColor, btnColor);\n    setTheme(oldTheme => oldTheme === 'dark' ? 'light' : 'dark');\n  };\n\n  function showPlayList() {\n    const {\n      isPlayListShowing\n    } = state;\n    setState({\n      isPlayListShowing: !isPlayListShowing\n    });\n  }\n\n  function showLogin() {\n    setState({\n      showLogin: true\n    });\n  }\n\n  function changeMode(event) {\n    const {\n      mode\n    } = state;\n    setState({\n      mode: (mode + 1) % 4\n    });\n    event.preventDefault();\n    event.stopPropagation();\n  }\n\n  function handleClick(event) {\n    const target = event.target.closest('.PlayListBoard');\n    if (target || !state.isPlayListShowing) return;\n    setState({\n      isPlayListShowing: false\n    });\n  }\n\n  console.log(state.showLogin); // React.useState\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    onClick: handleClick,\n    children: [/*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n      value: {\n        toggleTheme\n      },\n      children: React.useMemo(() => /*#__PURE__*/_jsxDEV(Header, {\n        showLogin: showLogin\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 30\n      }, this), [props.loginState])\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main\",\n      children: [React.useMemo(() => /*#__PURE__*/_jsxDEV(SideBar, {\n        list: props.playlist\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 30\n      }, this), [props.playList]), /*#__PURE__*/_jsxDEV(Main, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), React.useMemo(() => /*#__PURE__*/_jsxDEV(Bottom, {\n      showPlayList: showPlayList,\n      changeMode: changeMode,\n      mode: state.mode,\n      songSrc: state.songSrc\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 28\n    }, this), []), /*#__PURE__*/_jsxDEV(PlayerPage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), state.showLogin && /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 27\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, this);\n} // 花括号外层要包裹小括号\n\n\n_s(App, \"cgo2ddjIWoUlbRc9jeA4sVsgFn4=\");\n\n_c = App;\nexport default connect(state => ({\n  loginState: state.loginState,\n  detail: state.detail,\n  playlist: state.playlist\n}), {\n  getLoginState: getLoginStateAction\n})(App);\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["E:/js/react/music-app/React-musicApp/src/App.js"],"names":["React","useEffect","SideBar","Bottom","Header","Main","Login","PlayerPage","connect","getLoginStateAction","ThemeContext","THEME","light","bgColor","navColor","hoverColor","textColor","titleColor","tableStripeColor","activeColor","btnColor","dark","App","props","console","log","state","setState","useState","isPlayListShowing","songListCurIdx","mode","songSrc","loginState","showLogin","res","getLoginState","user","localStorage","getItem","theme","setTheme","toggleTheme","newTheme","document","documentElement","style","setProperty","oldTheme","showPlayList","changeMode","event","preventDefault","stopPropagation","handleClick","target","closest","useMemo","playlist","playList","detail"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react'\nimport SideBar from './Component/SideBar';\nimport Bottom from './Component/Bottom';\nimport Header from './Component/Header';\nimport Main from './Component/Main';\nimport Login from './Component/Login';\nimport PlayerPage from './Component/PlayerPage'\n\nimport './App.css'\nimport { connect } from 'react-redux';\nimport { getLoginStateAction } from './Redux/searchActions';\n\nimport ThemeContext from './Context/ThemeContext';\nconst THEME = {\n  light:{\n    bgColor: '#fefefe',\n    navColor: '#fff',\n    hoverColor: '#f0f1f2',\n    textColor: '#555',\n    titleColor:'#aaa',\n    tableStripeColor:'#f9f9f9',\n    activeColor:'rgb(255, 187, 29)',\n    btnColor: 'rgb(255, 202, 89)',\n  },\n  dark:{\n    bgColor: '#1b1b1b',\n    navColor: '#202020',\n    hoverColor: '0b0b0b',\n    textColor: '#ddd',\n    titleColor:'#ccc',\n    tableStripeColor:'#202020',\n    activeColor:'\tMediumPurple',\n    btnColor: '\tMediumSlateBlue',\n  }\n}\nfunction App(props) {\n  console.log('--------APP render---------')\n  const [state, setState] = React.useState({\n    isPlayListShowing: false,  // 显示播放列表\n    songListCurIdx: 1,         // 播放到了歌单的哪一首\n    mode: 0,                   // 播放模式，0：列表循环 1：单曲循环 2：随机循环 3：顺序循环\n    songSrc: '',\n    loginState: null,\n    showLogin:false,\n  });\n\n  useEffect(() => {\n    const res = (async() => {\n      return await props.getLoginState();\n    })();\n    console.log('res', res)\n  },[]);\n \n  const user = localStorage.getItem('user');\n  console.log(user);\n\n  const [theme, setTheme] = React.useState('light')\n  \n  /**\n   * 修改主题模式\n   */\n   const toggleTheme = () => {\n    console.log('【toggleTheme】')\n    const newTheme = (theme == 'dark')? theme.light : THEME.dark;\n    bgColor\n    navColor\n    hoverColor\n    textColor\n    titleColor\n    tableStripeColor\n    activeColor\n    btnColor\n    document.documentElement.style.setProperty('--bg-color', newTheme.bgColor)\n    document.documentElement.style.setProperty('--nav-color', newTheme.navColor)\n    document.documentElement.style.setProperty('--hover-color', newTheme.hoverColor)\n    document.documentElement.style.setProperty('--text-color', newTheme.textColor)\n    document.documentElement.style.setProperty('--title-color', newTheme.titleColor)\n    document.documentElement.style.setProperty('--table-stripe-color', newTheme.tableStripeColor)\n    document.documentElement.style.setProperty('--active-color', newTheme.activeColor)\n    document.documentElement.style.setProperty('--btn-color', newTheme.btnColor)\n    console.log(bgColor, btnColor)\n    setTheme(oldTheme => (oldTheme === 'dark')? 'light' : 'dark');\n  }\n\n  function showPlayList() {\n    const { isPlayListShowing } = state;\n    setState({\n      isPlayListShowing: !isPlayListShowing,\n    });\n  }\n  function showLogin(){\n    setState({showLogin:true});\n  }\n  function changeMode(event) {\n\n    const { mode } = state;\n    setState({\n      mode: (mode + 1) % 4,\n    })\n    event.preventDefault();\n    event.stopPropagation();\n  }\n  function handleClick(event){\n    const target = event.target.closest('.PlayListBoard');\n    if (target || !state.isPlayListShowing) return;\n    setState({\n      isPlayListShowing: false,\n    });\n  }\n  console.log(state.showLogin)\n  // React.useState\n  return (\n    <div className=\"App\" onClick={handleClick}>\n      <ThemeContext.Provider value={{toggleTheme}}>\n        {React.useMemo(() => <Header showLogin={showLogin}/>,[props.loginState])}\n      </ThemeContext.Provider>\n      <div className=\"main\">\n        {React.useMemo(() => <SideBar list={props.playlist} /> ,[props.playList])}\n        <Main>\n        </Main>\n      </div>\n      {React.useMemo(() => <Bottom\n        showPlayList={showPlayList}\n        changeMode={changeMode}\n        mode={state.mode}\n        songSrc={state.songSrc}\n      />, [])}\n      <PlayerPage />\n      {state.showLogin && <Login></Login>}\n    </div>\n  );\n\n}\n\n\n\n\n// 花括号外层要包裹小括号\nexport default connect(\n  state => ({\n    loginState:state.loginState,\n    detail:state.detail,\n    playlist:state.playlist,\n  }),\n  {\n    getLoginState:getLoginStateAction\n  }\n)(App)"]},"metadata":{},"sourceType":"module"}